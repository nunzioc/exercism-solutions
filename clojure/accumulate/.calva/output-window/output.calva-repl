; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"0.9.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.27.4"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.
clj꞉user꞉> 
:hello
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
nil
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__8261#]
   (accumulate/accumulate (fn [n] (str p1__8261# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
nil
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
nil
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__8591#]
   (accumulate/accumulate (fn [n] (str p1__8591# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
nil
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__8679#]
   (accumulate/accumulate (fn [n] (str p1__8679# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
nil
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__8767#]
   (accumulate/accumulate (fn [n] (str p1__8767# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; Syntax error macroexpanding clojure.core/defn at (accumulate.clj:4:3).
; () - failed: Insufficient input at: [:fn-tail] spec: :clojure.core.specs.alpha/defn-args
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
nil
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__8939#]
   (accumulate/accumulate (fn [n] (str p1__8939# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
nil
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__9029#]
   (accumulate/accumulate (fn [n] (str p1__9029# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
nil
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__9119#]
   (accumulate/accumulate (fn [n] (str p1__9119# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
nil
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__9209#]
   (accumulate/accumulate (fn [n] (str p1__9209# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
nil
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__9299#]
   (accumulate/accumulate (fn [n] (str p1__9299# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
nil
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__9389#]
   (accumulate/accumulate (fn [n] (str p1__9389# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
; Syntax error (ArityException) compiling at (accumulate.clj:7:1).
; Wrong number of args (1) passed to: accumulate/accumulate/loop--9509
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; Syntax error macroexpanding clojure.core/if-let at (accumulate.clj:4:3).
; () - failed: Insufficient input at: [:then]
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
nil
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__9653#]
   (accumulate/accumulate (fn [n] (str p1__9653# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
nil
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__9741#]
   (accumulate/accumulate (fn [n] (str p1__9741# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; Syntax error compiling at (accumulate.clj:5:5).
; Unable to resolve symbol: vall in this context
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
nil
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__9913#]
   (accumulate/accumulate (fn [n] (str p1__9913# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
nil
clj꞉accumulate꞉> 
nil
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
nil
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__10005#]
   (accumulate/accumulate (fn [n] (str p1__10005# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Execution error (ClassCastException) at accumulate/accumulate (accumulate.clj:5).
; class clojure.lang.PersistentVector$ChunkedSeq cannot be cast to class java.lang.Number (clojure.lang.PersistentVector$ChunkedSeq is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; Syntax error (ClassCastException) compiling at (accumulate.clj:6:1).
; class clojure.lang.PersistentVector$ChunkedSeq cannot be cast to class java.lang.Number (clojure.lang.PersistentVector$ChunkedSeq is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
#'accumulate/accumulate
clj꞉accumulate꞉> 
; Execution error (ClassCastException) at accumulate/eval10129$accumulate (form-init13942491984121570974.clj:6).
; class clojure.lang.PersistentVector$ChunkedSeq cannot be cast to class java.lang.Number (clojure.lang.PersistentVector$ChunkedSeq is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
4
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__10190#]
   (accumulate/accumulate (fn [n] (str p1__10190# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
4
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; Syntax error (ArityException) compiling at (accumulate.clj:6:1).
; Wrong number of args (0) passed to: clojure.core/cons--5361
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; Syntax error (ArityException) compiling at (accumulate.clj:6:1).
; Wrong number of args (1) passed to: clojure.core/cons--5361
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; Syntax error (IllegalArgumentException) compiling at (accumulate.clj:6:1).
; Don't know how to create ISeq from: java.lang.Long
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (IllegalArgumentException) at accumulate/accumulate (accumulate.clj:5).
; Don't know how to create ISeq from: java.lang.Long
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; Syntax error (ArityException) compiling at (accumulate.clj:6:1).
; Wrong number of args (2) passed to: clojure.core/vec
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (ArityException) at accumulate/accumulate (accumulate.clj:5).
; Wrong number of args (2) passed to: clojure.core/vec
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
[2 4]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__10636#]
   (accumulate/accumulate (fn [n] (str p1__10636# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
[2 4]
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
[4]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__10726#]
   (accumulate/accumulate (fn [n] (str p1__10726# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
[[nil 4] 4]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__10814#]
   (accumulate/accumulate (fn [n] (str p1__10814# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
[[nil 4] 4]
clj꞉accumulate꞉> 
#'accumulate/accumulate
clj꞉accumulate꞉> 
[[nil 4] 4]
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
[[nil 4] 4]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__10911#]
   (accumulate/accumulate (fn [n] (str p1__10911# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; Syntax error macroexpanding clojure.core/defn at (accumulate.clj:4:3).
; () - failed: Insufficient input at: [:fn-tail] spec: :clojure.core.specs.alpha/defn-args
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[[nil 4] 4]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__11083#]
   (accumulate/accumulate (fn [n] (str p1__11083# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[[nil 4] 4]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__11173#]
   (accumulate/accumulate (fn [n] (str p1__11173# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[[nil 4] 4]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__11263#]
   (accumulate/accumulate (fn [n] (str p1__11263# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[[nil 4] 4]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__11353#]
   (accumulate/accumulate (fn [n] (str p1__11353# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[[nil 4] 4]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__11443#]
   (accumulate/accumulate (fn [n] (str p1__11443# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; Syntax error reading source at (accumulate.clj:9:1).
; EOF while reading, starting at line 3
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
; Syntax error macroexpanding clojure.core/if-let at (accumulate.clj:5:5).
; () - failed: Insufficient input at: [:then]
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
; Syntax error macroexpanding clojure.core/if-let at (accumulate.clj:5:5).
; () - failed: Insufficient input at: [:then]
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[[nil 4] 4]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__11787#]
   (accumulate/accumulate (fn [n] (str p1__11787# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[[nil 4] 4]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__11878#]
   (accumulate/accumulate (fn [n] (str p1__11878# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[[nil 4] 4]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__11969#]
   (accumulate/accumulate (fn [n] (str p1__11969# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[[nil 4] 4]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__12060#]
   (accumulate/accumulate (fn [n] (str p1__12060# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[[nil 4] 4]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__12151#]
   (accumulate/accumulate (fn [n] (str p1__12151# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[[nil 4] 4]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__12242#]
   (accumulate/accumulate (fn [n] (str p1__12242# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
; Syntax error (ArityException) compiling at (accumulate.clj:12:1).
; Wrong number of args (0) passed to: accumulate/accumulate/loop--12363
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[[nil 4] 4]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__12424#]
   (accumulate/accumulate (fn [n] (str p1__12424# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
; Syntax error compiling at (accumulate.clj:10:16).
; Unable to resolve symbol: coll in this context
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[:hello]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__12604#]
   (accumulate/accumulate (fn [n] (str p1__12604# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
[:hello]
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
; Syntax error macroexpanding clojure.core/if-let at (accumulate.clj:5:5).
; () - failed: Insufficient input at: [:then]
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
; Syntax error (ArityException) compiling at (accumulate.clj:10:1).
; Wrong number of args (0) passed to: accumulate/accumulate/loop--12811
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[nil]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__12871#]
   (accumulate/accumulate (fn [n] (str p1__12871# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
[nil]
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[()]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__12963#]
   (accumulate/accumulate (fn [n] (str p1__12963# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
; Syntax error (ArityException) compiling at (accumulate.clj:10:1).
; Wrong number of args (0) passed to: clojure.core/cons--5361
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
; Syntax error (ArityException) compiling at (accumulate.clj:10:1).
; Wrong number of args (1) passed to: clojure.core/cons--5361
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[(2 2)]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__13233#]
   (accumulate/accumulate (fn [n] (str p1__13233# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
[(2 2)]
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[2 2]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__13325#]
   (accumulate/accumulate (fn [n] (str p1__13325# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
[2 2]
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
; Syntax error (ArityException) compiling at (accumulate.clj:10:1).
; Wrong number of args (3) passed to: clojure.core/cons--5361
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[2 2]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__13507#]
   (accumulate/accumulate (fn [n] (str p1__13507# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[4 4]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__13597#]
   (accumulate/accumulate (fn [n] (str p1__13597# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
[4 4]
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[4 16]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__13689#]
   (accumulate/accumulate (fn [n] (str p1__13689# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
[4 16]
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
[]
clj꞉accumulate꞉> 
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
[]
; Running tests for accumulate...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__13781#]
   (accumulate/accumulate (fn [n] (str p1__13781# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate꞉> 
[]
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
clj꞉accumulate꞉> 
; Evaluating file: accumulate_test.clj
#'accumulate-test/accumulate-recursively
; Running tests for accumulate-test...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__13892#]
   (accumulate/accumulate (fn [n] (str p1__13892# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate-test꞉> 
; Evaluating file: accumulate_test.clj
#'accumulate-test/accumulate-recursively
; Running tests for accumulate-test...
; ERROR in accumulate-test/accumulate-recursively (AFn.java:30):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:30)
; expected:
(=
 [["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
 (->
  (fn*
   [p1__13964#]
   (accumulate/accumulate (fn [n] (str p1__13964# n)) [1 2 3]))
  (accumulate/accumulate "abc")))
; ERROR in accumulate-test/accumulate-reversed-strings (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:24)
; expected:
(=
 ["eht" "kciuq" "nworb" "xof" "cte"]
 (->>
  ["the" "quick" "brown" "fox" "etc"]
  (accumulate/accumulate reverse)
  (map to-s)))
; ERROR in accumulate-test/accumulate-squares (AFn.java:13):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:13)
; expected:
(= [1 4 9] (accumulate/accumulate square [1 2 3]))
; ERROR in accumulate-test/accumulate-upcases (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:18)
; expected:
(=
 ["HELLO" "WORLD"]
 (->>
  ["hello" "world"]
  (accumulate/accumulate clojure.string/upper-case)
  (map to-s)))
; ERROR in accumulate-test/empty-accumulation (AFn.java:10):
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: accumulate/accumulate (AFn.java:10)
; expected:
(= [] (accumulate/accumulate square []))
; 5 tests finished, problems found. 😭 errors: 5, failures: 0, ns: 1, vars: 5
clj꞉accumulate-test꞉> 
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
; Syntax error (ArityException) compiling at (accumulate.clj:10:1).
; Wrong number of args (1) passed to: accumulate/accumulate
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
; Syntax error (ArityException) compiling at (accumulate.clj:10:1).
; Wrong number of args (1) passed to: accumulate/accumulate
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
; Syntax error compiling at (accumulate.clj:12:1).
; Unable to resolve symbol: square in this context
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
; Syntax error compiling at (accumulate.clj:12:1).
; Unable to resolve symbol: square in this context
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
; Syntax error compiling at (accumulate.clj:12:1).
; Unable to resolve symbol: square in this context
; Syntax error compiling at (accumulate.clj:12:1).
; Unable to resolve symbol: square in this context
clj꞉accumulate꞉> 
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; WARNING: loop already refers to: #'clojure.core/loop in namespace: accumulate, being replaced by: #'accumulate/loop
; Syntax error compiling at (accumulate.clj:12:1).
; Unable to resolve symbol: square in this context
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; Syntax error macroexpanding clojure.core/let at (accumulate.clj:4:3).
; loop - failed: vector? at: [:bindings] spec: :clojure.core.specs.alpha/bindings
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; Syntax error compiling at (accumulate.clj:4:3).
; Can't take value of a macro: #'clojure.core/loop
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; Syntax error macroexpanding clojure.core/let at (accumulate.clj:4:3).
; [loop] - failed: even-number-of-forms? at: [:bindings] spec: :clojure.core.specs.alpha/bindings
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; Syntax error macroexpanding loop at (accumulate.clj:4:3).
; loop requires an even number of forms in binding vector in accumulate:4
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; Syntax error macroexpanding loop at (accumulate.clj:5:22).
; loop requires a vector for its binding in accumulate:5
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; Syntax error macroexpanding loop at (accumulate.clj:5:22).
; loop requires a vector for its binding in accumulate:5
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; Syntax error macroexpanding loop at (accumulate.clj:5:22).
; loop requires a vector for its binding in accumulate:5
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; Syntax error macroexpanding loop at (accumulate.clj:5:22).
; loop requires a vector for its binding in accumulate:5
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Syntax error compiling at (accumulate.clj:10:1).
; Unable to resolve symbol: square in this context
clj꞉accumulate꞉> 
; Syntax error macroexpanding loop at (accumulate.clj:5:22).
; loop requires a vector for its binding in accumulate:5
; Syntax error compiling at (accumulate.clj:10:1).
; Unable to resolve symbol: square in this context
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; Syntax error compiling at (accumulate.clj:10:1).
; Unable to resolve symbol: square in this context
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
#'accumulate/accumulate
clj꞉accumulate꞉> 
; Syntax error compiling at (accumulate.clj:10:1).
; Unable to resolve symbol: square in this context
clj꞉accumulate꞉> 
; Syntax error compiling at (accumulate.clj:10:1).
; Unable to resolve symbol: square in this context
clj꞉accumulate꞉> 
; Syntax error compiling at (accumulate.clj:10:1).
; Unable to resolve symbol: square in this context
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; Syntax error compiling at (accumulate.clj:10:1).
; Unable to resolve symbol: square in this context
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Syntax error compiling at (accumulate.clj:10:1).
; Unable to resolve symbol: square in this context
clj꞉accumulate꞉> 
; Execution error (ArityException) at accumulate/eval15320 (form-init13942491984121570974.clj:10).
; Wrong number of args (0) passed to: accumulate/accumulate
clj꞉accumulate꞉> 
#'accumulate/accumulate
clj꞉accumulate꞉> 
; Syntax error compiling at (accumulate.clj:10:1).
; Unable to resolve symbol: square in this context
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; Syntax error (ArityException) compiling at (accumulate.clj:8:1).
; Wrong number of args (1) passed to: accumulate/accumulate
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; Syntax error (ArityException) compiling at (accumulate.clj:8:1).
; Wrong number of args (1) passed to: accumulate/eval15499/fn--15500
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; Syntax error (ArityException) compiling at (accumulate.clj:8:1).
; Wrong number of args (1) passed to: accumulate/eval15589/fn--15590
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
; Syntax error (ArityException) compiling at (accumulate.clj:8:1).
; Wrong number of args (1) passed to: accumulate/accumulate
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (ArityException) at accumulate/accumulate (accumulate.clj:5).
; Wrong number of args (1) passed to: accumulate/accumulate
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
(4 9)
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
(4 9)
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
nil
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
nil
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; Syntax error (ClassCastException) compiling at (accumulate.clj:8:1).
; class clojure.core$val cannot be cast to class java.lang.Number (clojure.core$val is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (ClassCastException) at accumulate/eval15978$fn (form-init13942491984121570974.clj:10).
; class clojure.core$val cannot be cast to class java.lang.Number (clojure.core$val is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; Syntax error (ClassCastException) compiling at (accumulate.clj:8:1).
; class clojure.core$val cannot be cast to class java.lang.Number (clojure.core$val is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (ClassCastException) at accumulate/eval16074$fn (form-init13942491984121570974.clj:10).
; class clojure.core$val cannot be cast to class java.lang.Number (clojure.core$val is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
nil
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
nil
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
nil
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
nil
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
[]
; Running tests for accumulate...
; FAIL in accumulate-test/accumulate-recursively (accumulate_test.clj:28):
; expected:
[["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
; actual:
"abc"
; FAIL in accumulate-test/accumulate-reversed-strings (accumulate_test.clj:22):
; expected:
["eht" "kciuq" "nworb" "xof" "cte"]
; actual:
("the" "quick" "brown" "fox" "etc")
; FAIL in accumulate-test/accumulate-squares (accumulate_test.clj:13):
; expected:
[1 4 9]
; actual:
[1 2 3]
; FAIL in accumulate-test/accumulate-upcases (accumulate_test.clj:16):
; expected:
["HELLO" "WORLD"]
; actual:
("hello" "world")
; 5 tests finished, problems found. 😭 errors: 0, failures: 4, ns: 1, vars: 5
clj꞉accumulate꞉> 
[]
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
[2 3]
; Running tests for accumulate...
; FAIL in accumulate-test/accumulate-recursively (accumulate_test.clj:28):
; expected:
[["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
; actual:
"abc"
; FAIL in accumulate-test/accumulate-reversed-strings (accumulate_test.clj:22):
; expected:
["eht" "kciuq" "nworb" "xof" "cte"]
; actual:
("the" "quick" "brown" "fox" "etc")
; FAIL in accumulate-test/accumulate-squares (accumulate_test.clj:13):
; expected:
[1 4 9]
; actual:
[1 2 3]
; FAIL in accumulate-test/accumulate-upcases (accumulate_test.clj:16):
; expected:
["HELLO" "WORLD"]
; actual:
("hello" "world")
; 5 tests finished, problems found. 😭 errors: 0, failures: 4, ns: 1, vars: 5
clj꞉accumulate꞉> 
[2 3]
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
(4 9)
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
(4 9)
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
()
; Running tests for accumulate...
; FAIL in accumulate-test/accumulate-recursively (accumulate_test.clj:28):
; expected:
[["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
; actual:
()
; FAIL in accumulate-test/accumulate-reversed-strings (accumulate_test.clj:22):
; expected:
["eht" "kciuq" "nworb" "xof" "cte"]
; actual:
()
; FAIL in accumulate-test/accumulate-squares (accumulate_test.clj:13):
; expected:
[1 4 9]
; actual:
()
; FAIL in accumulate-test/accumulate-upcases (accumulate_test.clj:16):
; expected:
["HELLO" "WORLD"]
; actual:
()
; 5 tests finished, problems found. 😭 errors: 0, failures: 4, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; Syntax error (ArityException) compiling at (accumulate.clj:9:1).
; Wrong number of args (0) passed to: clojure.core/cons--5361
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
()
; Running tests for accumulate...
; FAIL in accumulate-test/accumulate-recursively (accumulate_test.clj:28):
; expected:
[["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
; actual:
()
; FAIL in accumulate-test/accumulate-reversed-strings (accumulate_test.clj:22):
; expected:
["eht" "kciuq" "nworb" "xof" "cte"]
; actual:
()
; FAIL in accumulate-test/accumulate-squares (accumulate_test.clj:13):
; expected:
[1 4 9]
; actual:
()
; FAIL in accumulate-test/accumulate-upcases (accumulate_test.clj:16):
; expected:
["HELLO" "WORLD"]
; actual:
()
; 5 tests finished, problems found. 😭 errors: 0, failures: 4, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
(4 9)
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
(4 9)
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
[]
; Running tests for accumulate...
; FAIL in accumulate-test/accumulate-recursively (accumulate_test.clj:28):
; expected:
[["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
; actual:
[]
; FAIL in accumulate-test/accumulate-reversed-strings (accumulate_test.clj:22):
; expected:
["eht" "kciuq" "nworb" "xof" "cte"]
; actual:
()
; FAIL in accumulate-test/accumulate-squares (accumulate_test.clj:13):
; expected:
[1 4 9]
; actual:
[]
; FAIL in accumulate-test/accumulate-upcases (accumulate_test.clj:16):
; expected:
["HELLO" "WORLD"]
; actual:
()
; 5 tests finished, problems found. 😭 errors: 0, failures: 4, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
[]
; Running tests for accumulate...
; FAIL in accumulate-test/accumulate-recursively (accumulate_test.clj:28):
; expected:
[["a1" "a2" "a3"] ["b1" "b2" "b3"] ["c1" "c2" "c3"]]
; actual:
[]
; FAIL in accumulate-test/accumulate-reversed-strings (accumulate_test.clj:22):
; expected:
["eht" "kciuq" "nworb" "xof" "cte"]
; actual:
()
; FAIL in accumulate-test/accumulate-squares (accumulate_test.clj:13):
; expected:
[1 4 9]
; actual:
[]
; FAIL in accumulate-test/accumulate-upcases (accumulate_test.clj:16):
; expected:
["HELLO" "WORLD"]
; actual:
()
; 5 tests finished, problems found. 😭 errors: 0, failures: 4, ns: 1, vars: 5
clj꞉accumulate꞉> 
[]
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
(4 9)
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
#'accumulate/accumulate
clj꞉accumulate꞉> 
(4 9)
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
(4 9)
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
(4 9)
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
(4 9)
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
(4 9)
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
(4 9)
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
; Syntax error macroexpanding clojure.core/let at (accumulate.clj:4:3).
; () - failed: Insufficient input at: [:bindings] spec: :clojure.core.specs.alpha/bindings
; Evaluation of file accumulate.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: accumulate.clj
(4 9)
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
(4 9)
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
(4 9)
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
(4 9)
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
(4 9)
; Running tests for accumulate...
; FAIL in accumulate-test/empty-accumulation (accumulate_test.clj:10):
; expected:
[]
; actual:
nil
; 5 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
(4 9)
; Running tests for accumulate...
; 5 tests finished, all passing 👍, ns: 1, vars: 5
clj꞉accumulate꞉> 
(4 9)
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
(4)
; Running tests for accumulate...
; 5 tests finished, all passing 👍, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
[]
clj꞉accumulate꞉> 
[]
; Running tests for accumulate...
; 5 tests finished, all passing 👍, ns: 1, vars: 5
clj꞉accumulate꞉> 
(4)
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
(4)
; Running tests for accumulate...
; 5 tests finished, all passing 👍, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
(4)
; Running tests for accumulate...
; 5 tests finished, all passing 👍, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: accumulate.clj
#'accumulate/accumulate
; Running tests for accumulate...
; 5 tests finished, all passing 👍, ns: 1, vars: 5
clj꞉accumulate꞉> 
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; No tests found. 😱, ns: 0, vars: 0
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; No tests found. 😱, ns: 0, vars: 0
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; No tests found. 😱, ns: 0, vars: 0
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; No tests found. 😱, ns: 0, vars: 0
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; No tests found. 😱, ns: 0, vars: 0
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:4:3).
; Unable to resolve symbol: split in this context
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; No tests found. 😱, ns: 0, vars: 0
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; No tests found. 😱, ns: 0, vars: 0
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error macroexpanding clojure.core/ns at (acronym.clj:1:1).
; (:require) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error macroexpanding clojure.core/ns at (acronym.clj:1:1).
; (:require []) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error macroexpanding clojure.core/ns at (acronym.clj:1:1).
; (:require [clojure.string :as str]) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error macroexpanding clojure.core/ns at (acronym.clj:1:1).
; (:require [clojure.string :as str]) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error macroexpanding clojure.core/ns at (acronym.clj:1:1).
; (:require [clojure.string :as str]) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error macroexpanding clojure.core/ns at (acronym.clj:1:1).
; (() :require [clojure.string :as str]) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; No tests found. 😱, ns: 0, vars: 0
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; No tests found. 😱, ns: 0, vars: 0
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; No tests found. 😱, ns: 0, vars: 0
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:7:1).
; Unable to resolve symbol: ac in this context
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:7:1).
; Unable to resolve symbol: acron in this context
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:7:1).
; Wrong number of args (0) passed to: acronym/acronym
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
[""]
; Running tests for acronym...
; No tests found. 😱, ns: 0, vars: 0
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
["Hello" "World"]
; Running tests for acronym...
; No tests found. 😱, ns: 0, vars: 0
clj꞉acronym꞉> 
["Hello" "World"]
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:5:3).
; Unable to resolve symbol: m in this context
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
["Hello" "World"]
; Running tests for acronym...
; No tests found. 😱, ns: 0, vars: 0
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
(\H \W)
; Running tests for acronym...
; No tests found. 😱, ns: 0, vars: 0
clj꞉acronym꞉> 
(\H \W)
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (ClassCastException) compiling at (acronym.clj:7:1).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IFn (clojure.lang.LazySeq and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"HW"
; Running tests for acronym...
; No tests found. 😱, ns: 0, vars: 0
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
(\H \W)
; Running tests for acronym...
; No tests found. 😱, ns: 0, vars: 0
clj꞉acronym꞉> 
(\H \W)
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:5:8).
; Invalid token: str/
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"HW"
; Running tests for acronym...
; No tests found. 😱, ns: 0, vars: 0
clj꞉acronym꞉> 
"HW"
clj꞉acronym꞉> 
; Evaluating file: acronym_test.clj
#'acronym-test/test-acronym-cmos
; Running tests for acronym-test...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"Cms"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HML"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RoR"
; 7 tests finished, problems found. 😭 errors: 0, failures: 3, ns: 1, vars: 7
clj꞉acronym-test꞉> 
; Evaluating file: acronym.clj
; Syntax error (IllegalArgumentException) compiling at (acronym.clj:7:1).
; Don't know how to create ISeq from: clojure.core$first__5369
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"HW"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"Cms"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HML"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RoR"
; 7 tests finished, problems found. 😭 errors: 0, failures: 3, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:5:18).
; Unable to resolve symbol: uppercase in this context
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:5:18).
; Unable to resolve symbol: upper in this context
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:5:18).
; Unable to resolve symbol: uppercase in this context
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:5:18).
; No such var: str/uppercase
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
"HW"
clj꞉acronym꞉> 
; Syntax error compiling at (acronym.clj:5:18).
; No such var: str/uppercase
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:5:28).
; Invalid token: str/
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:5:28).
; Invalid token: str/
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"HW"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"CMS"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HML"
; 7 tests finished, problems found. 😭 errors: 1, failures: 2, ns: 1, vars: 7
clj꞉acronym꞉> 
"HW"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOW"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"CMS"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HML"
; 7 tests finished, problems found. 😭 errors: 1, failures: 2, ns: 1, vars: 7
clj꞉acronym꞉> 
"HOW"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:5:46).
; Unable to resolve symbol: split in this context
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (ClassCastException) compiling at (acronym.clj:7:1).
; class java.lang.String cannot be cast to class java.lang.Number (java.lang.String and java.lang.Number are in module java.base of loader 'bootstrap')
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:5:46).
; Unable to resolve symbol: split in this context
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:5:46).
; Unable to resolve symbol: split- in this context
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (IllegalArgumentException) compiling at (acronym.clj:7:1).
; Don't know how to create ISeq from: java.util.regex.Pattern
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (IllegalArgumentException) compiling at (acronym.clj:7:1).
; Don't know how to create ISeq from: java.util.regex.Pattern
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (IllegalArgumentException) compiling at (acronym.clj:7:1).
; Don't know how to create ISeq from: java.util.regex.Pattern
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:5:46).
; Unable to resolve symbol: strin in this context
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (IllegalArgumentException) compiling at (acronym.clj:7:1).
; Don't know how to create ISeq from: clojure.core$partition_by$fn__8496
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:7:1).
; Wrong number of args (1) passed to: acronym/acronym/fn--19888
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:7:1).
; Wrong number of args (1) passed to: acronym/acronym/fn--19908
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:5:68).
; Invalid token: str/
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:7:1).
; Wrong number of args (1) passed to: acronym/acronym/fn--19943
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (ArityException) at acronym/acronym (acronym.clj:5).
; Wrong number of args (1) passed to: acronym/acronym/fn--19943
clj꞉acronym꞉> 
#'acronym/acronym
clj꞉acronym꞉> 
; Execution error (ArityException) at acronym/acronym (form-init13942491984121570974.clj:5).
; Wrong number of args (1) passed to: acronym/acronym/fn--19950
clj꞉acronym꞉> 
#'acronym/acronym
clj꞉acronym꞉> 
; Execution error (ArityException) at cider.nrepl.middleware.debug/pr-short (debug.clj:188).
; Wrong number of args (1) passed to: acronym/eval19955/acronym--19956/fn--19957
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:8:1).
; Wrong number of args (1) passed to: acronym/acronym/fn--19978
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:9:1).
; Wrong number of args (1) passed to: acronym/acronym/fn--19998
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (ArityException) at acronym/acronym (acronym.clj:5).
; Wrong number of args (1) passed to: acronym/acronym/fn--19998
clj꞉acronym꞉> 
#'acronym/acronym
clj꞉acronym꞉> 
; Execution error (ArityException) at cider.nrepl.middleware.debug/pr-short (debug.clj:188).
; Wrong number of args (1) passed to: acronym/eval20005/acronym--20006/fn--20007
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"H"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"C"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"F"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"H"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"P"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"P"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"R"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
"H"
clj꞉acronym꞉> 
#'acronym/acronym
clj꞉acronym꞉> 
"H"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOW"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"CMS"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HML"
; 7 tests finished, problems found. 😭 errors: 1, failures: 2, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOW"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"CMS"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HML"
; 7 tests finished, problems found. 😭 errors: 1, failures: 2, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOW"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"CMS"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HML"
; 7 tests finished, problems found. 😭 errors: 1, failures: 2, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:7:38).
; Unclosed character class near index 2
[] 
  ^
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"HOW"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"CMS"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HML"
; 7 tests finished, problems found. 😭 errors: 1, failures: 2, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:7:39).
; Unclosed character class near index 3
[ \]
   ^
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:7:40).
; Illegal/unsupported escape sequence near index 3
[ \U]
   ^
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
"HOW"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:7:40).
; Illegal/unsupported escape sequence near index 3
[ \U]
   ^
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:7:40).
; Illegal/unsupported escape sequence near index 3
[ \U]
   ^
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:7:40).
; Illegal/unsupported escape sequence near index 3
[ \U]
   ^
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
"HOW"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (NullPointerException) compiling at (acronym.clj:9:1).
; null
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (NullPointerException) at acronym/acronym (acronym.clj:5).
; null
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (NullPointerException) compiling at (acronym.clj:9:1).
; null
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (NullPointerException) at acronym/acronym (acronym.clj:5).
; null
clj꞉acronym꞉> 
#'acronym/acronym
clj꞉acronym꞉> 
; Execution error (NullPointerException) at acronym/acronym (form-init13942491984121570974.clj:5).
; null
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (NullPointerException) compiling at (acronym.clj:9:1).
; null
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (NullPointerException) at acronym/acronym (acronym.clj:5).
; null
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (NullPointerException) compiling at (acronym.clj:10:1).
; null
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (NullPointerException) compiling at (acronym.clj:10:1).
; null
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (NullPointerException) compiling at (acronym.clj:10:1).
; null
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (NullPointerException) compiling at (acronym.clj:10:1).
; null
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (NullPointerException) compiling at (acronym.clj:10:1).
; null
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (NullPointerException) compiling at (acronym.clj:10:1).
; null
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (NullPointerException) compiling at (acronym.clj:10:1).
; null
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:8:28).
; Unclosed character class near index 1
[]
 ^
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"H "
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"C"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"F"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"H"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"P"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"P"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"R"
; 7 tests finished, problems found. 😭 errors: 1, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
"H "
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:8:29).
; Unclosed character class near index 2
[]f
  ^
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:8:28).
; Unclosed character class near index 1
[f
 ^
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"H "
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"C"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"F"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"H"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"P"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"P"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"R"
; 7 tests finished, problems found. 😭 errors: 1, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
"H "
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"H "
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"CO"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"F"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"H"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"P"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"P"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"R"
; 7 tests finished, problems found. 😭 errors: 1, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (NullPointerException) compiling at (acronym.clj:10:1).
; null
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (NullPointerException) at acronym/acronym (acronym.clj:5).
; null
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"H"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"C"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"F"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"H"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"P"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"P"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"R"
; 7 tests finished, problems found. 😭 errors: 1, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
"H"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:8:30).
; Unclosed character class near index 3
[]\d
   ^
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:8:30).
; Unclosed character class near index 3
[ \d
   ^
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"HOW"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"CMS"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HML"
; 7 tests finished, problems found. 😭 errors: 1, failures: 2, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOW"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"CMS"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HML"
; 7 tests finished, problems found. 😭 errors: 1, failures: 2, ns: 1, vars: 7
clj꞉acronym꞉> 
"HOW"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:9:1).
; Unable to resolve symbol: string in this context
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"HOW"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"CMS"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HML"
; 7 tests finished, problems found. 😭 errors: 1, failures: 2, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOW"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"CMS"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HML"
; 7 tests finished, problems found. 😭 errors: 1, failures: 2, ns: 1, vars: 7
clj꞉acronym꞉> 
["HyperText" "Markup" "Language"]
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:8:34).
; Empty character family near index 6
[\s\p{}]
      ^
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:8:36).
; Empty character family near index 6
[\s\p{}Lu]
      ^
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:8:35).
; Unclosed character family near index 9
[\s\p{Lu]
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (NullPointerException) compiling at (acronym.clj:10:1).
; null
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (NullPointerException) compiling at (acronym.clj:10:1).
; null
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
["" "yper" "ext" "" "arkup" "" "anguage"]
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HELLO OF WORLD"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"COMPLEMENTARY METAL-OXIDE SEMICONDUCTOR"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FIRST IN, FIRST OUT"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HYPERTEXT MARKUP LANGUAGE"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"PHP: HYPERTEXT PREPROCESSOR"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PORTABLE NETWORK GRAPHICS"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RUBY ON RAILS"
; 7 tests finished, problems found. 😭 errors: 1, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOW"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"CMS"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HML"
; 7 tests finished, problems found. 😭 errors: 1, failures: 2, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOW"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"CMS"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HML"
; 7 tests finished, problems found. 😭 errors: 1, failures: 2, ns: 1, vars: 7
clj꞉acronym꞉> 
"HOW"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOW"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"CMS"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HML"
; 7 tests finished, problems found. 😭 errors: 1, failures: 2, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOW"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"CMS"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HML"
; 7 tests finished, problems found. 😭 errors: 1, failures: 2, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:7:28).
; Unmatched delimiter: )
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:9:1).
; Wrong number of args (1) passed to: acronym/acronym/fn--20888
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:9:1).
; Wrong number of args (1) passed to: acronym/acronym/fn--20908
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:9:1).
; Wrong number of args (1) passed to: acronym/acronym/fn--20928
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:9:1).
; Wrong number of args (1) passed to: acronym/acronym/fn--20948
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:7:39).
; Invalid token: str/
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:9:1).
; Wrong number of args (1) passed to: acronym/acronym/fn--20983
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"Clojure.lang.lazyseq@5db0151Clojure.lang.lazyseq@1198Clojure.lang.lazyseq@6b30031"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"Clojure.lang.lazyseq@ab0b5401Clojure.lang.lazyseq@fd9f173aClojure.lang.lazyseq@749a6c18"
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
"Clojure.lang.lazyseq@1"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"Clojure.lang.lazyseq@5c0bb2fClojure.lang.lazyseq@193e6Clojure.lang.lazyseq@5c0bb2fClojure.lang.lazyseq@1ab8d"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"Clojure.lang.lazyseq@987872b8Clojure.lang.lazyseq@bdd7bd89Clojure.lang.lazyseq@37f16679"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Clojure.lang.lazyseq@338d63Clojure.lang.lazyseq@9886fe98Clojure.lang.lazyseq@c3973bf0"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"Clojure.lang.lazyseq@c38ed87cClojure.lang.lazyseq@38fb1eedClojure.lang.lazyseq@9e1f7dac"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"Clojure.lang.lazyseq@35217bClojure.lang.lazyseq@11a0Clojure.lang.lazyseq@6660fa0"
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
"Clojure.lang.lazyseq@5db0151Clojure.lang.lazyseq@1198Clojure.lang.lazyseq@6b30031"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:9:1).
; Wrong number of args (2) passed to: clojure.string/capitalize
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"clojure.lang.LazySeq@5db0151clojure.lang.LazySeq@db8clojure.lang.LazySeq@6b30411"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"clojure.lang.LazySeq@ab0b5401clojure.lang.LazySeq@6108bf1aclojure.lang.LazySeq@a4399bf8"
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
"clojure.lang.LazySeq@1"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"clojure.lang.LazySeq@5c0bb2fclojure.lang.LazySeq@193e6clojure.lang.LazySeq@5c0bb2fclojure.lang.LazySeq@1ab8d"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"clojure.lang.LazySeq@9886fe98clojure.lang.LazySeq@bdd7bd89clojure.lang.LazySeq@37f16679"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"clojure.lang.LazySeq@340963clojure.lang.LazySeq@9886fe98clojure.lang.LazySeq@c3973bf0"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"clojure.lang.LazySeq@c38ed87cclojure.lang.LazySeq@38fb1eedclojure.lang.LazySeq@9e1f7dac"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"clojure.lang.LazySeq@35217bclojure.lang.LazySeq@dc0clojure.lang.LazySeq@6660fa0"
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
"clojure.lang.LazySeq@5db0151clojure.lang.LazySeq@db8clojure.lang.LazySeq@6b30411"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOW"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"CMS"
; ERROR in acronym-test/test-acronym-empty-string (string.clj:6):
; error: java.lang.NullPointerException (string.clj:6)
; expected:
(= "" (acronym/acronym ""))
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HML"
; 7 tests finished, problems found. 😭 errors: 1, failures: 2, ns: 1, vars: 7
clj꞉acronym꞉> 
"HOW"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HelloOfWorld"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"ComplementaryMetal-oxideSemiconductor"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FirstIn,FirstOut"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HypertextMarkupLanguage"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Php:HypertextPreprocessor"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PortableNetworkGraphics"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RubyOnRails"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:9:1).
; Wrong number of args (0) passed to: clojure.string/capitalize
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"HelloOfWorld"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"ComplementaryMetal-oxideSemiconductor"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FirstIn,FirstOut"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HypertextMarkupLanguage"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Php:HypertextPreprocessor"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PortableNetworkGraphics"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RubyOnRails"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
"HelloOfWorld"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of w"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"ComplementaryMetal-oxideSemiconductor"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FirstIn,FirstOut"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HypertextMarkupLanguage"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Php:HypertextPreprocessor"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PortableNetworkGraphics"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RubyOnRails"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
clj꞉acronym꞉> 
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"ComplementaryMetal-oxideSemiconductor"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FirstIn,FirstOut"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HypertextMarkupLanguage"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Php:HypertextPreprocessor"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PortableNetworkGraphics"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RubyOnRails"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"ComplementaryMetal-oxideSemiconductor"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FirstIn,FirstOut"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HypertextMarkupLanguage"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Php:HypertextPreprocessor"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PortableNetworkGraphics"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RubyOnRails"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:5:3).
; Wrong number of args (0) passed to: clojure.core/->
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"ComplementaryMetal-oxideSemiconductor"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FirstIn,FirstOut"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HypertextMarkupLanguage"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Php:HypertextPreprocessor"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PortableNetworkGraphics"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RubyOnRails"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"ComplementaryMetal-oxideSemiconductor"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FirstIn,FirstOut"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HypertextMarkupLanguage"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Php:HypertextPreprocessor"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PortableNetworkGraphics"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RubyOnRails"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:6:11).
; Invalid token: str/
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"ComplementaryMetal-oxideSemiconductor"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FirstIn,FirstOut"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HypertextMarkupLanguage"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Php:HypertextPreprocessor"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PortableNetworkGraphics"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RubyOnRails"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"ComplementaryMetal-oxideSemiconductor"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FirstIn,FirstOut"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HypertextMarkupLanguage"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Php:HypertextPreprocessor"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PortableNetworkGraphics"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RubyOnRails"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:11:1).
; Wrong number of args (1) passed to: clojure.string/split
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:11:1).
; Wrong number of args (1) passed to: clojure.string/split
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:6:20).
; Unmatched delimiter: )
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"ComplementaryMetal-oxideSemiconductor"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FirstIn,FirstOut"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HypertextMarkupLanguage"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Php:HypertextPreprocessor"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PortableNetworkGraphics"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RubyOnRails"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"ComplementaryMetal-oxideSemiconductor"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FirstIn,FirstOut"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HypertextMarkupLanguage"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Php:HypertextPreprocessor"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PortableNetworkGraphics"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RubyOnRails"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"ComplementaryMetal-oxideSemiconductor"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FirstIn,FirstOut"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HypertextMarkupLanguage"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Php:HypertextPreprocessor"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PortableNetworkGraphics"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RubyOnRails"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"ComplementaryMetal-oxideSemiconductor"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FirstIn,FirstOut"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HypertextMarkupLanguage"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Php:HypertextPreprocessor"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PortableNetworkGraphics"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RubyOnRails"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"[\"complementary\" \"metal-oxide\" \"semiconductor\"]"
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
"[\"\"]"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"[\"first\" \"in,\" \"first\" \"out\"]"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"[\"hypertext\" \"markup\" \"language\"]"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"[\"php:\" \"hypertext\" \"preprocessor\"]"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"[\"portable\" \"network\" \"graphics\"]"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"[\"ruby\" \"on\" \"rails\"]"
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
"[\"hello\" \"of\" \"world\"]"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (IllegalArgumentException) compiling at (acronym.clj:5:3).
; Can't call nil, form: (nil (str/split string #" "))
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:7:7).
; Unable to resolve symbol: ma in this context
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (IllegalArgumentException) compiling at (acronym.clj:9:1).
; Don't know how to create ISeq from: clojure.string$capitalize
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (IllegalArgumentException) at acronym/acronym (acronym.clj:5).
; Don't know how to create ISeq from: clojure.string$capitalize
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (ClassCastException) compiling fn* at (acronym.clj:5:3).
; class clojure.lang.Symbol cannot be cast to class clojure.lang.IPersistentVector (clojure.lang.Symbol and clojure.lang.IPersistentVector are in unnamed module of loader 'app')
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (ClassCastException) compiling fn* at (acronym.clj:5:3).
; class clojure.lang.Symbol cannot be cast to class clojure.lang.IPersistentVector (clojure.lang.Symbol and clojure.lang.IPersistentVector are in unnamed module of loader 'app')
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (ClassCastException) compiling fn* at (acronym.clj:5:3).
; class clojure.lang.Symbol cannot be cast to class clojure.lang.IPersistentVector (clojure.lang.Symbol and clojure.lang.IPersistentVector are in unnamed module of loader 'app')
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (IllegalArgumentException) at acronym/acronym (acronym.clj:5).
; Don't know how to create ISeq from: clojure.string$capitalize
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"ComplementaryMetal-oxideSemiconductor"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FirstIn,FirstOut"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HypertextMarkupLanguage"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Php:HypertextPreprocessor"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PortableNetworkGraphics"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RubyOnRails"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"ComplementaryMetal-oxideSemiconductor"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FirstIn,FirstOut"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HypertextMarkupLanguage"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Php:HypertextPreprocessor"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PortableNetworkGraphics"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RubyOnRails"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"[\"complementary\" \"metal-oxide\" \"semiconductor\"]"
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
"[\"\"]"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"[\"first\" \"in,\" \"first\" \"out\"]"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"[\"hypertext\" \"markup\" \"language\"]"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"[\"php:\" \"hypertext\" \"preprocessor\"]"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"[\"portable\" \"network\" \"graphics\"]"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"[\"ruby\" \"on\" \"rails\"]"
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:5:3).
; Unable to resolve symbol: -as> in this context
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"[\"complementary\" \"metal-oxide\" \"semiconductor\"]"
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
"[\"\"]"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"[\"first\" \"in,\" \"first\" \"out\"]"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"[\"hypertext\" \"markup\" \"language\"]"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"[\"php:\" \"hypertext\" \"preprocessor\"]"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"[\"portable\" \"network\" \"graphics\"]"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"[\"ruby\" \"on\" \"rails\"]"
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error macroexpanding clojure.core/let at (acronym.clj:5:3).
; (str/split #" ") - failed: simple-symbol? at: [:bindings :form :local-symbol] spec: :clojure.core.specs.alpha/local-name
(str/split #" ") - failed: vector? at: [:bindings :form :seq-destructure] spec: :clojure.core.specs.alpha/seq-binding-form
(str/split #" ") - failed: map? at: [:bindings :form :map-destructure] spec: :clojure.core.specs.alpha/map-bindings
(str/split #" ") - failed: map? at: [:bindings :form :map-destructure] spec: :clojure.core.specs.alpha/map-special-binding
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:9:1).
; Wrong number of args (1) passed to: clojure.string/split
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
#function[clojure.string/join]
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
#function[clojure.string/join]
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:9:1).
; Wrong number of args (0) passed to: clojure.string/capitalize
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
#function[clojure.string/join]
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
#function[clojure.string/join]
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
#function[clojure.string/join]
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:9:1).
; Wrong number of args (0) passed to: clojure.string/join
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"ComplementaryMetal-oxideSemiconductor"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FirstIn,FirstOut"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HypertextMarkupLanguage"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Php:HypertextPreprocessor"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PortableNetworkGraphics"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RubyOnRails"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
"HelloOfWorld"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"ComplementaryMetal-oxideSemiconductor"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FirstIn,FirstOut"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HypertextMarkupLanguage"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Php:HypertextPreprocessor"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PortableNetworkGraphics"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RubyOnRails"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"ComplementaryMetal-oxideSemiconductor"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FirstIn,FirstOut"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HypertextMarkupLanguage"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Php:HypertextPreprocessor"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PortableNetworkGraphics"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RubyOnRails"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"ComplementaryMetal-oxideSemiconductor"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"FirstIn,FirstOut"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HypertextMarkupLanguage"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"Php:HypertextPreprocessor"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"PortableNetworkGraphics"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RubyOnRails"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
()
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
()
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
()
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
()
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
()
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
()
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
()
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:10:1).
; Wrong number of args (0) passed to: clojure.core/filter
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:9:5).
; No such var: str/u
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
#function[clojure.core/filter/fn--5874]
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:9:17).
; Invalid token: str/
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:10:1).
; Wrong number of args (0) passed to: clojure.core/filter
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
#function[clojure.core/filter/fn--5874]
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:9:19).
; Invalid token: str/
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
#function[clojure.core/filter/fn--5874]
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
#function[clojure.core/filter/fn--5874]
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:9:14).
; Unable to resolve symbol: re-ma in this context
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
#function[clojure.core/filter/fn--5874]
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
#function[clojure.core/filter/fn--5874]
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
#function[clojure.core/filter/fn--5874]
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; ERROR in acronym-test/test-acronym-cmos (core.clj:24):
; error: java.lang.ClassCastException: class java.lang.Character cannot be cast to class java.lang.CharSequence (java.lang.Character and java.lang.CharSequence are in module java.base of loader 'bootstrap') (core.clj:24)
; expected:
(= "CMOS" (acronym/acronym "Complementary metal-oxide semiconductor"))
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
()
; ERROR in acronym-test/test-acronym-fifo (core.clj:18):
; error: java.lang.ClassCastException: class java.lang.Character cannot be cast to class java.lang.CharSequence (java.lang.Character and java.lang.CharSequence are in module java.base of loader 'bootstrap') (core.clj:18)
; expected:
(= "FIFO" (acronym/acronym "First In, First Out"))
; ERROR in acronym-test/test-acronym-html (core.clj:15):
; error: java.lang.ClassCastException: class java.lang.Character cannot be cast to class java.lang.CharSequence (java.lang.Character and java.lang.CharSequence are in module java.base of loader 'bootstrap') (core.clj:15)
; expected:
(= "HTML" (acronym/acronym "HyperText Markup Language"))
; ERROR in acronym-test/test-acronym-php (core.clj:21):
; error: java.lang.ClassCastException: class java.lang.Character cannot be cast to class java.lang.CharSequence (java.lang.Character and java.lang.CharSequence are in module java.base of loader 'bootstrap') (core.clj:21)
; expected:
(= "PHP" (acronym/acronym "PHP: Hypertext Preprocessor"))
; ERROR in acronym-test/test-acronym-png (core.clj:9):
; error: java.lang.ClassCastException: class java.lang.Character cannot be cast to class java.lang.CharSequence (java.lang.Character and java.lang.CharSequence are in module java.base of loader 'bootstrap') (core.clj:9)
; expected:
(= "PNG" (acronym/acronym "Portable Network Graphics"))
; ERROR in acronym-test/test-acronym-ror (core.clj:12):
; error: java.lang.ClassCastException: class java.lang.Character cannot be cast to class java.lang.CharSequence (java.lang.Character and java.lang.CharSequence are in module java.base of loader 'bootstrap') (core.clj:12)
; expected:
(= "ROR" (acronym/acronym "Ruby on Rails"))
; 7 tests finished, problems found. 😭 errors: 6, failures: 1, ns: 1, vars: 7
clj꞉acronym꞉> 
; Error printing return value (ClassCastException) at clojure.core/re-matcher (core.clj:4849).
; class java.lang.Character cannot be cast to class java.lang.CharSequence (java.lang.Character and java.lang.CharSequence are in module java.base of loader 'bootstrap')
clj꞉acronym꞉> 
#'acronym/acronym
clj꞉acronym꞉> 
; Execution error (ClassCastException) at acronym/eval22161$acronym$fn (form-init13942491984121570974.clj:10).
; class java.lang.Character cannot be cast to class java.lang.CharSequence (java.lang.Character and java.lang.CharSequence are in module java.base of loader 'bootstrap')
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:9:13).
; Unable to resolve symbol: % in this context
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:9:5).
; Unable to resolve symbol: % in this context
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error compiling at (acronym.clj:9:5).
; Unable to resolve symbol: % in this context
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"Hello of world"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
nil
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
nil
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
nil
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
nil
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
nil
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
nil
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
nil
clj꞉acronym꞉> 
#'acronym/acronym
clj꞉acronym꞉> 
nil
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:11:1).
; EOF while reading string
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:11:1).
; EOF while reading string
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:11:1).
; EOF while reading string
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:11:1).
; EOF while reading string
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
nil
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
nil
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
nil
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
nil
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
nil
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
nil
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
nil
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
nil
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"H"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
nil
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
nil
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
nil
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
nil
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
nil
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
nil
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
"H"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"H"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
nil
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
nil
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
nil
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
nil
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
nil
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
nil
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
"H"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" "W" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
nil
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
nil
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
nil
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
nil
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
nil
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
nil
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
("H" "W" "L")
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" "W" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C" "M" "S")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "I" "F" "O")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H" "M" "L")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P" "H" "P")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P" "N" "G")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "O" "R")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
("H" "O" "W")
clj꞉acronym꞉> 
("H" "W" "L")
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" "O" "W" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C" "M" "S")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "I" "F" "O")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H" "M" "L")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P" "H" "P")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P" "N" "G")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "O" "R")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
("H" "O" "W" "L")
clj꞉acronym꞉> 
#'acronym/acronym
clj꞉acronym꞉> 
("H" "O" "W")
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" "O" "W" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C" "M" "S")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "I" "F" "O")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H" "M" "L")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P" "H" "P")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P" "N" "G")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "O" "R")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" "O" "W" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C" "o" "M" "o" "S" "o" "o")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "I" "F" "O")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H" "M" "L")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P" "H" "P" "o" "o")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P" "o" "N" "o" "G")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "O" "R")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" "o" "O" "W" "o" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C" "o" "M" "o" "S" "o" "o")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "I" "F" "O")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H" "M" "L")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P" "H" "P" "o" "o")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P" "o" "N" "o" "G")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "O" "R")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" "o" "o" "W" "o" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C" "o" "M" "o" "S" "o" "o")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "I" "F" "O")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H" "M" "L")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P" "H" "P" "o" "o")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P" "o" "N" "o" "G")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "O" "R")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
("H" "o" "o" "W" "o" "L")
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" "o" "o" "W" "o" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C" "o" "M" "o" "S" "o" "o")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "I" "F" "O")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H" "M" "L")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P" "H" "P" "o" "o")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P" "o" "N" "o" "G")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "O" "R")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" "o" "o" "W" "o" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C"
 "o"
 "m"
 "p"
 "l"
 "e"
 "m"
 "e"
 "n"
 "t"
 "a"
 "r"
 "y"
 "M"
 "e"
 "t"
 "a"
 "l"
 "o"
 "x"
 "i"
 "d"
 "e"
 "S"
 "e"
 "m"
 "i"
 "c"
 "o"
 "n"
 "d"
 "u"
 "c"
 "t"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "i" "r" "s" "t" "I" "n" "F" "i" "r" "s" "t" "O" "u" "t")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "M"
 "a"
 "r"
 "k"
 "u"
 "p"
 "L"
 "a"
 "n"
 "g"
 "u"
 "a"
 "g"
 "e")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P"
 "h"
 "p"
 "H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "P"
 "r"
 "e"
 "p"
 "r"
 "o"
 "c"
 "e"
 "s"
 "s"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P"
 "o"
 "r"
 "t"
 "a"
 "b"
 "l"
 "e"
 "N"
 "e"
 "t"
 "w"
 "o"
 "r"
 "k"
 "G"
 "r"
 "a"
 "p"
 "h"
 "i"
 "c"
 "s")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "u" "b" "y" "O" "n" "R" "a" "i" "l" "s")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" " " " " "W" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C"
 "o"
 "m"
 "p"
 "l"
 "e"
 "m"
 "e"
 "n"
 "t"
 "a"
 "r"
 "y"
 "M"
 "e"
 "t"
 "a"
 "l"
 "o"
 "x"
 "i"
 "d"
 "e"
 "S"
 "e"
 "m"
 "i"
 "c"
 "o"
 "n"
 "d"
 "u"
 "c"
 "t"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "i" "r" "s" "t" "I" "n" "F" "i" "r" "s" "t" "O" "u" "t")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "M"
 "a"
 "r"
 "k"
 "u"
 "p"
 "L"
 "a"
 "n"
 "g"
 "u"
 "a"
 "g"
 "e")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P"
 "h"
 "p"
 "H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "P"
 "r"
 "e"
 "p"
 "r"
 "o"
 "c"
 "e"
 "s"
 "s"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P"
 "o"
 "r"
 "t"
 "a"
 "b"
 "l"
 "e"
 "N"
 "e"
 "t"
 "w"
 "o"
 "r"
 "k"
 "G"
 "r"
 "a"
 "p"
 "h"
 "i"
 "c"
 "s")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "u" "b" "y" "O" "n" "R" "a" "i" "l" "s")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" "e" "l" "l" "o" " " "o" "f" " " "W" "o" "r" "L" "d")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C"
 "o"
 "m"
 "p"
 "l"
 "e"
 "m"
 "e"
 "n"
 "t"
 "a"
 "r"
 "y"
 "M"
 "e"
 "t"
 "a"
 "l"
 "o"
 "x"
 "i"
 "d"
 "e"
 "S"
 "e"
 "m"
 "i"
 "c"
 "o"
 "n"
 "d"
 "u"
 "c"
 "t"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "i" "r" "s" "t" "I" "n" "F" "i" "r" "s" "t" "O" "u" "t")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "M"
 "a"
 "r"
 "k"
 "u"
 "p"
 "L"
 "a"
 "n"
 "g"
 "u"
 "a"
 "g"
 "e")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P"
 "h"
 "p"
 "H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "P"
 "r"
 "e"
 "p"
 "r"
 "o"
 "c"
 "e"
 "s"
 "s"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P"
 "o"
 "r"
 "t"
 "a"
 "b"
 "l"
 "e"
 "N"
 "e"
 "t"
 "w"
 "o"
 "r"
 "k"
 "G"
 "r"
 "a"
 "p"
 "h"
 "i"
 "c"
 "s")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "u" "b" "y" "O" "n" "R" "a" "i" "l" "s")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
("H" "e" "l" "l" "o" " " "o" "f" " " "W" "o" "r" "L" "d")
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" "e" "l" "l" "o" " " "o" "f" " " "W" "o" "r" "L" "d")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C"
 "o"
 "m"
 "p"
 "l"
 "e"
 "m"
 "e"
 "n"
 "t"
 "a"
 "r"
 "y"
 "M"
 "e"
 "t"
 "a"
 "l"
 "o"
 "x"
 "i"
 "d"
 "e"
 "S"
 "e"
 "m"
 "i"
 "c"
 "o"
 "n"
 "d"
 "u"
 "c"
 "t"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "i" "r" "s" "t" "I" "n" "F" "i" "r" "s" "t" "O" "u" "t")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "M"
 "a"
 "r"
 "k"
 "u"
 "p"
 "L"
 "a"
 "n"
 "g"
 "u"
 "a"
 "g"
 "e")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P"
 "h"
 "p"
 "H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "P"
 "r"
 "e"
 "p"
 "r"
 "o"
 "c"
 "e"
 "s"
 "s"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P"
 "o"
 "r"
 "t"
 "a"
 "b"
 "l"
 "e"
 "N"
 "e"
 "t"
 "w"
 "o"
 "r"
 "k"
 "G"
 "r"
 "a"
 "p"
 "h"
 "i"
 "c"
 "s")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "u" "b" "y" "O" "n" "R" "a" "i" "l" "s")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
("H" "e" "l" "l" "o" " " "o" "f" " " "W" "o" "r" "L" "d")
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" "e" "l" "l" "o" " " "o" "f" " " "W" "o" "r" "L" "d")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C"
 "o"
 "m"
 "p"
 "l"
 "e"
 "m"
 "e"
 "n"
 "t"
 "a"
 "r"
 "y"
 "M"
 "e"
 "t"
 "a"
 "l"
 "o"
 "x"
 "i"
 "d"
 "e"
 "S"
 "e"
 "m"
 "i"
 "c"
 "o"
 "n"
 "d"
 "u"
 "c"
 "t"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "i" "r" "s" "t" "I" "n" "F" "i" "r" "s" "t" "O" "u" "t")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "M"
 "a"
 "r"
 "k"
 "u"
 "p"
 "L"
 "a"
 "n"
 "g"
 "u"
 "a"
 "g"
 "e")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P"
 "h"
 "p"
 "H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "P"
 "r"
 "e"
 "p"
 "r"
 "o"
 "c"
 "e"
 "s"
 "s"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P"
 "o"
 "r"
 "t"
 "a"
 "b"
 "l"
 "e"
 "N"
 "e"
 "t"
 "w"
 "o"
 "r"
 "k"
 "G"
 "r"
 "a"
 "p"
 "h"
 "i"
 "c"
 "s")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "u" "b" "y" "O" "n" "R" "a" "i" "l" "s")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
("H" "e" "l" "l" "o" " " "o" "f" " " "W" "o" "r" "L" "d")
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" "e" "l" "l" "o" " " "o" "f" " " "W" "o" "r" "L" "d")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C"
 "o"
 "m"
 "p"
 "l"
 "e"
 "m"
 "e"
 "n"
 "t"
 "a"
 "r"
 "y"
 "M"
 "e"
 "t"
 "a"
 "l"
 "o"
 "x"
 "i"
 "d"
 "e"
 "S"
 "e"
 "m"
 "i"
 "c"
 "o"
 "n"
 "d"
 "u"
 "c"
 "t"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "i" "r" "s" "t" "I" "n" "F" "i" "r" "s" "t" "O" "u" "t")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "M"
 "a"
 "r"
 "k"
 "u"
 "p"
 "L"
 "a"
 "n"
 "g"
 "u"
 "a"
 "g"
 "e")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P"
 "h"
 "p"
 "H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "P"
 "r"
 "e"
 "p"
 "r"
 "o"
 "c"
 "e"
 "s"
 "s"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P"
 "o"
 "r"
 "t"
 "a"
 "b"
 "l"
 "e"
 "N"
 "e"
 "t"
 "w"
 "o"
 "r"
 "k"
 "G"
 "r"
 "a"
 "p"
 "h"
 "i"
 "c"
 "s")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "u" "b" "y" "O" "n" "R" "a" "i" "l" "s")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
("H" "e" "l" "l" "o" " " "o" "f" " " "W" "o" "r" "L" "d")
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" "e" "l" "l" "o" " " "o" "f" " " "W" "o" "r" "L" "d")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C"
 "o"
 "m"
 "p"
 "l"
 "e"
 "m"
 "e"
 "n"
 "t"
 "a"
 "r"
 "y"
 "M"
 "e"
 "t"
 "a"
 "l"
 "o"
 "x"
 "i"
 "d"
 "e"
 "S"
 "e"
 "m"
 "i"
 "c"
 "o"
 "n"
 "d"
 "u"
 "c"
 "t"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "i" "r" "s" "t" "I" "n" "F" "i" "r" "s" "t" "O" "u" "t")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "M"
 "a"
 "r"
 "k"
 "u"
 "p"
 "L"
 "a"
 "n"
 "g"
 "u"
 "a"
 "g"
 "e")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P"
 "h"
 "p"
 "H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "P"
 "r"
 "e"
 "p"
 "r"
 "o"
 "c"
 "e"
 "s"
 "s"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P"
 "o"
 "r"
 "t"
 "a"
 "b"
 "l"
 "e"
 "N"
 "e"
 "t"
 "w"
 "o"
 "r"
 "k"
 "G"
 "r"
 "a"
 "p"
 "h"
 "i"
 "c"
 "s")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "u" "b" "y" "O" "n" "R" "a" "i" "l" "s")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
("H" "e" "l" "l" "o" " " "o" "f" " " "W" "o" "r" "L" "d")
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
nil
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C"
 "o"
 "m"
 "p"
 "l"
 "e"
 "m"
 "e"
 "n"
 "t"
 "a"
 "r"
 "y"
 "M"
 "e"
 "t"
 "a"
 "l"
 "o"
 "x"
 "i"
 "d"
 "e"
 "S"
 "e"
 "m"
 "i"
 "c"
 "o"
 "n"
 "d"
 "u"
 "c"
 "t"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "i" "r" "s" "t" "I" "n" "F" "i" "r" "s" "t" "O" "u" "t")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "M"
 "a"
 "r"
 "k"
 "u"
 "p"
 "L"
 "a"
 "n"
 "g"
 "u"
 "a"
 "g"
 "e")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P"
 "h"
 "p"
 "H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "P"
 "r"
 "e"
 "p"
 "r"
 "o"
 "c"
 "e"
 "s"
 "s"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P"
 "o"
 "r"
 "t"
 "a"
 "b"
 "l"
 "e"
 "N"
 "e"
 "t"
 "w"
 "o"
 "r"
 "k"
 "G"
 "r"
 "a"
 "p"
 "h"
 "i"
 "c"
 "s")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "u" "b" "y" "O" "n" "R" "a" "i" "l" "s")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
(" o" " W")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C"
 "o"
 "m"
 "p"
 "l"
 "e"
 "m"
 "e"
 "n"
 "t"
 "a"
 "r"
 "y"
 "M"
 "e"
 "t"
 "a"
 "l"
 "o"
 "x"
 "i"
 "d"
 "e"
 "S"
 "e"
 "m"
 "i"
 "c"
 "o"
 "n"
 "d"
 "u"
 "c"
 "t"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "i" "r" "s" "t" "I" "n" "F" "i" "r" "s" "t" "O" "u" "t")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "M"
 "a"
 "r"
 "k"
 "u"
 "p"
 "L"
 "a"
 "n"
 "g"
 "u"
 "a"
 "g"
 "e")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P"
 "h"
 "p"
 "H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "P"
 "r"
 "e"
 "p"
 "r"
 "o"
 "c"
 "e"
 "s"
 "s"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P"
 "o"
 "r"
 "t"
 "a"
 "b"
 "l"
 "e"
 "N"
 "e"
 "t"
 "w"
 "o"
 "r"
 "k"
 "G"
 "r"
 "a"
 "p"
 "h"
 "i"
 "c"
 "s")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "u" "b" "y" "O" "n" "R" "a" "i" "l" "s")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
(" o" " W")
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("" "" "" "" "" " o" "" " W" "" "" "" "" "")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C"
 "o"
 "m"
 "p"
 "l"
 "e"
 "m"
 "e"
 "n"
 "t"
 "a"
 "r"
 "y"
 "M"
 "e"
 "t"
 "a"
 "l"
 "o"
 "x"
 "i"
 "d"
 "e"
 "S"
 "e"
 "m"
 "i"
 "c"
 "o"
 "n"
 "d"
 "u"
 "c"
 "t"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "i" "r" "s" "t" "I" "n" "F" "i" "r" "s" "t" "O" "u" "t")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "M"
 "a"
 "r"
 "k"
 "u"
 "p"
 "L"
 "a"
 "n"
 "g"
 "u"
 "a"
 "g"
 "e")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P"
 "h"
 "p"
 "H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "P"
 "r"
 "e"
 "p"
 "r"
 "o"
 "c"
 "e"
 "s"
 "s"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P"
 "o"
 "r"
 "t"
 "a"
 "b"
 "l"
 "e"
 "N"
 "e"
 "t"
 "w"
 "o"
 "r"
 "k"
 "G"
 "r"
 "a"
 "p"
 "h"
 "i"
 "c"
 "s")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "u" "b" "y" "O" "n" "R" "a" "i" "l" "s")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" " o" " W" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C"
 "o"
 "m"
 "p"
 "l"
 "e"
 "m"
 "e"
 "n"
 "t"
 "a"
 "r"
 "y"
 "M"
 "e"
 "t"
 "a"
 "l"
 "o"
 "x"
 "i"
 "d"
 "e"
 "S"
 "e"
 "m"
 "i"
 "c"
 "o"
 "n"
 "d"
 "u"
 "c"
 "t"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "i" "r" "s" "t" "I" "n" "F" "i" "r" "s" "t" "O" "u" "t")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "M"
 "a"
 "r"
 "k"
 "u"
 "p"
 "L"
 "a"
 "n"
 "g"
 "u"
 "a"
 "g"
 "e")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P"
 "h"
 "p"
 "H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "P"
 "r"
 "e"
 "p"
 "r"
 "o"
 "c"
 "e"
 "s"
 "s"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P"
 "o"
 "r"
 "t"
 "a"
 "b"
 "l"
 "e"
 "N"
 "e"
 "t"
 "w"
 "o"
 "r"
 "k"
 "G"
 "r"
 "a"
 "p"
 "h"
 "i"
 "c"
 "s")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "u" "b" "y" "O" "n" "R" "a" "i" "l" "s")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
("H" " o" " W" "L")
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" " o" " W" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C"
 "o"
 "m"
 "p"
 "l"
 "e"
 "m"
 "e"
 "n"
 "t"
 "a"
 "r"
 "y"
 "M"
 "e"
 "t"
 "a"
 "l"
 "o"
 "x"
 "i"
 "d"
 "e"
 "S"
 "e"
 "m"
 "i"
 "c"
 "o"
 "n"
 "d"
 "u"
 "c"
 "t"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "i" "r" "s" "t" "I" "n" "F" "i" "r" "s" "t" "O" "u" "t")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "M"
 "a"
 "r"
 "k"
 "u"
 "p"
 "L"
 "a"
 "n"
 "g"
 "u"
 "a"
 "g"
 "e")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P"
 "h"
 "p"
 "H"
 "y"
 "p"
 "e"
 "r"
 "t"
 "e"
 "x"
 "t"
 "P"
 "r"
 "e"
 "p"
 "r"
 "o"
 "c"
 "e"
 "s"
 "s"
 "o"
 "r")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P"
 "o"
 "r"
 "t"
 "a"
 "b"
 "l"
 "e"
 "N"
 "e"
 "t"
 "w"
 "o"
 "r"
 "k"
 "G"
 "r"
 "a"
 "p"
 "h"
 "i"
 "c"
 "s")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "u" "b" "y" "O" "n" "R" "a" "i" "l" "s")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
nil
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
nil
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
nil
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
nil
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
nil
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
nil
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; ERROR in acronym-test/test-acronym-cmos (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: clojure.core/re-seq (AFn.java:24)
; expected:
(= "CMOS" (acronym/acronym "Complementary metal-oxide semiconductor"))
; ERROR in acronym-test/test-acronym-empty-string (AFn.java:6):
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: clojure.core/re-seq (AFn.java:6)
; expected:
(= "" (acronym/acronym ""))
; ERROR in acronym-test/test-acronym-fifo (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: clojure.core/re-seq (AFn.java:18)
; expected:
(= "FIFO" (acronym/acronym "First In, First Out"))
; ERROR in acronym-test/test-acronym-html (AFn.java:15):
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: clojure.core/re-seq (AFn.java:15)
; expected:
(= "HTML" (acronym/acronym "HyperText Markup Language"))
; ERROR in acronym-test/test-acronym-php (AFn.java:21):
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: clojure.core/re-seq (AFn.java:21)
; expected:
(= "PHP" (acronym/acronym "PHP: Hypertext Preprocessor"))
; ERROR in acronym-test/test-acronym-png (AFn.java:9):
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: clojure.core/re-seq (AFn.java:9)
; expected:
(= "PNG" (acronym/acronym "Portable Network Graphics"))
; ERROR in acronym-test/test-acronym-ror (AFn.java:12):
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: clojure.core/re-seq (AFn.java:12)
; expected:
(= "ROR" (acronym/acronym "Ruby on Rails"))
; 7 tests finished, problems found. 😭 errors: 7, failures: 0, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; ERROR in acronym-test/test-acronym-cmos (AFn.java:24):
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: clojure.core/re-seq (AFn.java:24)
; expected:
(= "CMOS" (acronym/acronym "Complementary metal-oxide semiconductor"))
; ERROR in acronym-test/test-acronym-empty-string (AFn.java:6):
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: clojure.core/re-seq (AFn.java:6)
; expected:
(= "" (acronym/acronym ""))
; ERROR in acronym-test/test-acronym-fifo (AFn.java:18):
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: clojure.core/re-seq (AFn.java:18)
; expected:
(= "FIFO" (acronym/acronym "First In, First Out"))
; ERROR in acronym-test/test-acronym-html (AFn.java:15):
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: clojure.core/re-seq (AFn.java:15)
; expected:
(= "HTML" (acronym/acronym "HyperText Markup Language"))
; ERROR in acronym-test/test-acronym-php (AFn.java:21):
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: clojure.core/re-seq (AFn.java:21)
; expected:
(= "PHP" (acronym/acronym "PHP: Hypertext Preprocessor"))
; ERROR in acronym-test/test-acronym-png (AFn.java:9):
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: clojure.core/re-seq (AFn.java:9)
; expected:
(= "PNG" (acronym/acronym "Portable Network Graphics"))
; ERROR in acronym-test/test-acronym-ror (AFn.java:12):
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: clojure.core/re-seq (AFn.java:12)
; expected:
(= "ROR" (acronym/acronym "Ruby on Rails"))
; 7 tests finished, problems found. 😭 errors: 7, failures: 0, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C" " m" " s")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" " I" " F" " O")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H" "T" " M" " L")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P" "H" "P" " H" " P")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P" " N" " G")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" " o" " R")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"C m s"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"F I F O"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HT M L"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"PHP H P"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"P N G"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"R o R"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; ERROR in acronym-test/test-acronym-cmos (acronym.clj:24):
; error: java.lang.ClassCastException: class java.lang.String cannot be cast to class clojure.lang.IFn (java.lang.String is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app') (acronym.clj:24)
; expected:
(= "CMOS" (acronym/acronym "Complementary metal-oxide semiconductor"))
; ERROR in acronym-test/test-acronym-empty-string (acronym.clj:6):
; error: java.lang.ClassCastException: class java.lang.String cannot be cast to class clojure.lang.IFn (java.lang.String is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app') (acronym.clj:6)
; expected:
(= "" (acronym/acronym ""))
; ERROR in acronym-test/test-acronym-fifo (acronym.clj:18):
; error: java.lang.ClassCastException: class java.lang.String cannot be cast to class clojure.lang.IFn (java.lang.String is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app') (acronym.clj:18)
; expected:
(= "FIFO" (acronym/acronym "First In, First Out"))
; ERROR in acronym-test/test-acronym-html (acronym.clj:15):
; error: java.lang.ClassCastException: class java.lang.String cannot be cast to class clojure.lang.IFn (java.lang.String is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app') (acronym.clj:15)
; expected:
(= "HTML" (acronym/acronym "HyperText Markup Language"))
; ERROR in acronym-test/test-acronym-php (acronym.clj:21):
; error: java.lang.ClassCastException: class java.lang.String cannot be cast to class clojure.lang.IFn (java.lang.String is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app') (acronym.clj:21)
; expected:
(= "PHP" (acronym/acronym "PHP: Hypertext Preprocessor"))
; ERROR in acronym-test/test-acronym-png (acronym.clj:9):
; error: java.lang.ClassCastException: class java.lang.String cannot be cast to class clojure.lang.IFn (java.lang.String is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app') (acronym.clj:9)
; expected:
(= "PNG" (acronym/acronym "Portable Network Graphics"))
; ERROR in acronym-test/test-acronym-ror (acronym.clj:12):
; error: java.lang.ClassCastException: class java.lang.String cannot be cast to class clojure.lang.IFn (java.lang.String is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app') (acronym.clj:12)
; expected:
(= "ROR" (acronym/acronym "Ruby on Rails"))
; 7 tests finished, problems found. 😭 errors: 7, failures: 0, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"C M S"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"F I F O"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HT M L"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"PHP H P"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"P N G"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"R O R"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"C M S"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"F I F O"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HT M L"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"PHP H P"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"P N G"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"R O R"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"H O WL"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"C M S"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"F I F O"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"HT M L"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"PHP H P"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"P N G"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"R O R"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
"H O WL"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
#function[clojure.core/comp/fn--5792]
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
#function[clojure.core/comp/fn--5792]
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
#function[clojure.core/comp/fn--5792]
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
#function[clojure.core/comp/fn--5792]
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
#function[clojure.core/comp/fn--5792]
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
#function[clojure.core/comp/fn--5792]
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
#function[clojure.core/comp/fn--5792]
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
#function[clojure.core/comp/fn--5792]
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:12:64).
; Unmatched delimiter: )
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:12:64).
; Unmatched delimiter: )
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
("H" " o" " W" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C" " m" " s")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" " I" " F" " O")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H" "T" " M" " L")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P" "H" "P" " H" " P")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P" " N" " G")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" " o" " R")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" " o" " W" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C" " m" " s")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" " I" " F" " O")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H" "T" " M" " L")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P" "H" "P" " H" " P")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P" " N" " G")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" " o" " R")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
("H" " o" " W" "L")
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" " o" " W" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C" " m" " s")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" " I" " F" " O")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H" "T" " M" " L")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P" "H" "P" " H" " P")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P" " N" " G")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" " o" " R")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" " o" " W" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C" " m" " s")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" " I" " F" " O")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H" "T" " M" " L")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P" "H" "P" " H" " P")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P" " N" " G")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" " o" " R")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
(["H" nil] [" o" ""] [" W" ""] ["L" nil])
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
(["C" nil] [" m" ""] [" s" ""])
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
(["F" nil] [" I" ""] [" F" ""] [" O" ""])
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
(["H" nil] ["T" nil] [" M" ""] [" L" ""])
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
(["P" nil] ["H" nil] ["P" nil] [" H" ""] [" P" ""])
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
(["P" nil] [" N" ""] [" G" ""])
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
(["R" nil] [" o" ""] [" R" ""])
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" " o" " W" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C" " m" " s")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" " I" " F" " O")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H" "T" " M" " L")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P" "H" "P" " H" " P")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P" " N" " G")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" " o" " R")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" "W" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "I" "F" "O")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H" "T" "M" "L")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P" "H" "P" "H" "P")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P" "N" "G")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "R")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" "o" "W" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C" "m" "s")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "I" "F" "O")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H" "T" "M" "L")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P" "H" "P" "H" "P")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P" "N" "G")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "o" "R")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
("H" "o" "W" "L")
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" "o" "W" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C" "m" "s")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "I" "F" "O")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H" "T" "M" "L")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P" "H" "P" "H" "P")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P" "N" "G")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "o" "R")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
("H" "o" "W" "L")
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:13:1).
; EOF while reading, starting at line 11
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:13:1).
; EOF while reading, starting at line 11
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
("H" "o" "W" "L")
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:13:1).
; EOF while reading, starting at line 11
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:13:1).
; EOF while reading, starting at line 11
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
("H" "o" "W" "L")
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" "o" "W" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C" "m" "s")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "I" "F" "O")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H" "T" "M" "L")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P" "H" "P" "H" "P")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P" "N" "G")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "o" "R")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
("H" "o" "W" "L")
clj꞉acronym꞉> 
("H" "o" "W" "L")
clj꞉acronym꞉> 
("H" "o" "W" "L")
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
("H" "o" "W" "L")
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
("C" "m" "s")
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
nil
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
("F" "I" "F" "O")
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
("H" "T" "M" "L")
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
("P" "H" "P" "H" "P")
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
("P" "N" "G")
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
("R" "o" "R")
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (ClassCastException) compiling at (acronym.clj:13:1).
; class clojure.lang.Cons cannot be cast to class clojure.lang.IFn (clojure.lang.Cons and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"(\"H\" \"o\" \"W\" \"L\")"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"(\"C\" \"m\" \"s\")"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"(\"F\" \"I\" \"F\" \"O\")"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"(\"H\" \"T\" \"M\" \"L\")"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"(\"P\" \"H\" \"P\" \"H\" \"P\")"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"(\"P\" \"N\" \"G\")"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"(\"R\" \"o\" \"R\")"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (ClassCastException) compiling at (acronym.clj:13:1).
; class java.lang.String cannot be cast to class clojure.lang.IFn (java.lang.String is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (ClassCastException) at acronym/acronym (acronym.clj:12).
; class java.lang.String cannot be cast to class clojure.lang.IFn (java.lang.String is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"(\"H\" \"o\" \"W\" \"L\")"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"(\"C\" \"m\" \"s\")"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"(\"F\" \"I\" \"F\" \"O\")"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"(\"H\" \"T\" \"M\" \"L\")"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"(\"P\" \"H\" \"P\" \"H\" \"P\")"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"(\"P\" \"N\" \"G\")"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"(\"R\" \"o\" \"R\")"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
"(\"H\" \"o\" \"W\" \"L\")"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HoWL"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"Cms"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"PHPHP"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RoR"
; 7 tests finished, problems found. 😭 errors: 0, failures: 3, ns: 1, vars: 7
clj꞉acronym꞉> 
"HoWL"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (ClassCastException) compiling at (acronym.clj:13:1).
; class java.lang.String cannot be cast to class clojure.lang.IFn (java.lang.String is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"HOWL"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"CMS"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"PHPHP"
; 7 tests finished, problems found. 😭 errors: 0, failures: 2, ns: 1, vars: 7
clj꞉acronym꞉> 
"HOWL"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:12:56).
; Unclosed character class near index 15
(?<=[] )\w|[A-Z]
               ^
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"HWL"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"C"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"PHPHP"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"RR"
; 7 tests finished, problems found. 😭 errors: 0, failures: 3, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOWL"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"PHPHP"
; 7 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:13:1).
; Wrong number of args (2) passed to: clojure.string/upper-case
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
#function[clojure.core/comp/fn--5792]
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
#function[clojure.core/comp/fn--5792]
; FAIL in acronym-test/test-acronym-empty-string (acronym_test.clj:6):
; expected:
""
; actual:
#function[clojure.core/comp/fn--5792]
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
#function[clojure.core/comp/fn--5792]
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
#function[clojure.core/comp/fn--5792]
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
#function[clojure.core/comp/fn--5792]
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
#function[clojure.core/comp/fn--5792]
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
#function[clojure.core/comp/fn--5792]
; 7 tests finished, problems found. 😭 errors: 0, failures: 7, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error (ArityException) compiling at (acronym.clj:13:1).
; Wrong number of args (3) passed to: clojure.core/identity
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"HOWL"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"PHPHP"
; 7 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 7
clj꞉acronym꞉> 
"HOWL"
clj꞉acronym꞉> 
"HOWL"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"[\"H\" \"\"][\"O\" NIL][\"W\" NIL][\"L\" \"\"]"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"[\"C\" \"\"][\"M\" NIL][\"O\" NIL][\"S\" NIL]"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"[\"F\" \"\"][\"I\" NIL][\"F\" NIL][\"O\" NIL]"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"[\"H\" \"\"][\"T\" \"\"][\"M\" NIL][\"L\" NIL]"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"[\"P\" \"\"][\"H\" \"\"][\"P\" \"\"][\"H\" NIL][\"P\" NIL]"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"[\"P\" \"\"][\"N\" NIL][\"G\" NIL]"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"[\"R\" \"\"][\"O\" NIL][\"R\" NIL]"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOWL"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"PHPHP"
; 7 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:12:67).
; capturing group name does not start with a Latin letter near index 15
(?<=[ -])\w|(?<)[A-Z]
               ^
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"HOWL"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"PHPHP"
; 7 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:12:70).
; Unclosed character class near index 23
(?<=[ -])\w|(?<=[])[A-Z]
                       ^
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:12:71).
; Unclosed character class near index 24
(?<=[ -])\w|(?<=[^])[A-Z]
                        ^
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"OWL"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"MOS"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"IFO"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"TML"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"HPHP"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"NG"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"OR"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"OWL"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"MOS"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"IFO"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"TML"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"HPHP"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"NG"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"OR"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
; Syntax error reading source at (acronym.clj:12:70).
; Unclosed character class near index 23
(?<=[ -])\w|(?<=[])[A-Z]
                       ^
; Evaluation of file acronym.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: acronym.clj
"OWL"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"MOS"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"IFO"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"TML"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"HP"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"NG"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"OR"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
"OWL"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"OWL"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"MOS"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"IFO"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"TML"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"HP"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"NG"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"OR"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
"OWL"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"OW"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"MOS"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"IFO"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"ML"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"HPHP"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"NG"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"OR"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
"OW"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"OW"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"MOS"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"IFO"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"ML"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"HPHP"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"NG"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"OR"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
"OW"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"OWL"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"MOS"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"IFO"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"TML"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"HP"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"NG"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"OR"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"OWL"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"MOS"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"IFO"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"TML"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"HP"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"NG"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"OR"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
"OWL"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOWL"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"PHPHP"
; 7 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 7
clj꞉acronym꞉> 
"HOWL"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOWL"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"PHPHP"
; 7 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOWL"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"PHPHP"
; 7 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"[\"H\" \"\"][\"O\" NIL][\"W\" NIL][\"L\" \"\"]"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"[\"C\" \"\"][\"M\" NIL][\"O\" NIL][\"S\" NIL]"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"[\"F\" \"\"][\"I\" NIL][\"F\" NIL][\"O\" NIL]"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"[\"H\" \"\"][\"T\" \"\"][\"M\" NIL][\"L\" NIL]"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"[\"P\" \"\"][\"H\" \"\"][\"P\" \"\"][\"H\" NIL][\"P\" NIL]"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"[\"P\" \"\"][\"N\" NIL][\"G\" NIL]"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"[\"R\" \"\"][\"O\" NIL][\"R\" NIL]"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOWL"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"PHPHP"
; 7 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"OW"
; Running tests for acronym...
; FAIL in acronym-test/test-acronym-cmos (acronym_test.clj:24):
; expected:
"CMOS"
; actual:
"MOS"
; FAIL in acronym-test/test-acronym-fifo (acronym_test.clj:18):
; expected:
"FIFO"
; actual:
"IFO"
; FAIL in acronym-test/test-acronym-html (acronym_test.clj:15):
; expected:
"HTML"
; actual:
"ML"
; FAIL in acronym-test/test-acronym-php (acronym_test.clj:21):
; expected:
"PHP"
; actual:
"HP"
; FAIL in acronym-test/test-acronym-png (acronym_test.clj:9):
; expected:
"PNG"
; actual:
"NG"
; FAIL in acronym-test/test-acronym-ror (acronym_test.clj:12):
; expected:
"ROR"
; actual:
"OR"
; 7 tests finished, problems found. 😭 errors: 0, failures: 6, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOWL"
; Running tests for acronym...
; 7 tests finished, all passing 👍, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOWL"
; Running tests for acronym...
; 7 tests finished, all passing 👍, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"HOWL"
; Running tests for acronym...
; 7 tests finished, all passing 👍, ns: 1, vars: 7
clj꞉acronym꞉> 
"HOWL"
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; 7 tests finished, all passing 👍, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
#'acronym/acronym
; Running tests for acronym...
; 7 tests finished, all passing 👍, ns: 1, vars: 7
clj꞉acronym꞉> 
; Evaluating file: all_your_base.clj
#'all-your-base/convert
; Running tests for all-your-base...
; No tests found. 😱, ns: 0, vars: 0
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
#'all-your-base/convert
; Running tests for all-your-base...
; No tests found. 😱, ns: 0, vars: 0
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
#'all-your-base/convert
; Running tests for all-your-base...
; No tests found. 😱, ns: 0, vars: 0
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
#'all-your-base/convert
; Running tests for all-your-base...
; No tests found. 😱, ns: 0, vars: 0
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
#'all-your-base/convert
; Running tests for all-your-base...
; No tests found. 😱, ns: 0, vars: 0
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
#'all-your-base/convert
; Running tests for all-your-base...
; No tests found. 😱, ns: 0, vars: 0
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:6:1).
; Wrong number of args (0) passed to: all-your-base/convert
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:6:1).
; Wrong number of args (0) passed to: all-your-base/convert
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
"234"
; Running tests for all-your-base...
; No tests found. 😱, ns: 0, vars: 0
clj꞉all-your-base꞉> 
"234"
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
"234"
; Running tests for all-your-base...
; No tests found. 😱, ns: 0, vars: 0
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:6:1).
; class java.lang.String cannot be cast to class clojure.lang.IFn (java.lang.String is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:4:3).
; No such namespace: str
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (FileNotFoundException) compiling at (all_your_base.clj:1:1).
; Could not locate c__init.class, c.clj or c.cljc on classpath.
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:7:1).
; class java.lang.String cannot be cast to class java.util.regex.Pattern (java.lang.String and java.util.regex.Pattern are in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (ClassCastException) at all-your-base/convert (all_your_base.clj:5).
; class java.lang.String cannot be cast to class java.util.regex.Pattern (java.lang.String and java.util.regex.Pattern are in module java.base of loader 'bootstrap')
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
["2" "3" "4"]
; Running tests for all-your-base...
; No tests found. 😱, ns: 0, vars: 0
clj꞉all-your-base꞉> 
["2" "3" "4"]
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:7:1).
; Wrong number of args (0) passed to: clojure.lang.PersistentVector
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:7:1).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (ClassCastException) at all-your-base/convert (all_your_base.clj:5).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:7:1).
; Wrong number of args (0) passed to: clojure.lang.PersistentVector
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:7:1).
; class clojure.lang.PersistentVector cannot be cast to class java.lang.Character (clojure.lang.PersistentVector is in unnamed module of loader 'app'; java.lang.Character is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (ClassCastException) at all-your-base/convert (all_your_base.clj:5).
; class clojure.lang.PersistentVector cannot be cast to class java.lang.Character (clojure.lang.PersistentVector is in unnamed module of loader 'app'; java.lang.Character is in module java.base of loader 'bootstrap')
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:7:1).
; class clojure.lang.PersistentVector cannot be cast to class java.lang.String (clojure.lang.PersistentVector is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (ClassCastException) at all-your-base/convert (all_your_base.clj:5).
; class clojure.lang.PersistentVector cannot be cast to class java.lang.String (clojure.lang.PersistentVector is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:5:3).
; Unable to find static field: parseInt in class java.lang.Integer
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error reading source at (all_your_base.clj:5:51).
; No reader function for tag Integer/parseInt
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:5:3).
; Unable to find static field: parseInt in class java.lang.Integer
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (IllegalArgumentException) compiling . at (all_your_base.clj:5:9).
; No matching method parseInt found taking 0 args for class java.lang.Integer
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (IllegalArgumentException) compiling . at (all_your_base.clj:5:9).
; No matching method parseInt found taking 0 args for class java.lang.Integer
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
(2 3 4)
; Running tests for all-your-base...
; No tests found. 😱, ns: 0, vars: 0
clj꞉all-your-base꞉> 
(2 3 4)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
(2 3 4)
; Running tests for all-your-base...
; No tests found. 😱, ns: 0, vars: 0
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:5:3).
; Unable to resolve symbol: l in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
(2 3 4)
; Running tests for all-your-base...
; No tests found. 😱, ns: 0, vars: 0
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/let at (all_your_base.clj:5:3).
; [(map (fn* [p1__24698#] (Integer/parseInt p1__24698#)) (str/split (str num) #""))] - failed: even-number-of-forms? at: [:bindings] spec: :clojure.core.specs.alpha/bindings
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; No tests found. 😱, ns: 0, vars: 0
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; No tests found. 😱, ns: 0, vars: 0
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:8:1).
; Wrong number of args (1) passed to: clojure.core/reduce
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
0
; Running tests for all-your-base...
; No tests found. 😱, ns: 0, vars: 0
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:8:1).
; Wrong number of args (0) passed to: clojure.core/map
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/ns at (all_your_base.clj:1:1).
; ((:require [clojure.string :as str] (require (quote [clojure.math.numeric-tower :as math :refer [expt]])))) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/ns at (all_your_base.clj:1:1).
; ((:require [clojure.string :as str] (require (quote [clojure.math.numeric-tower :as math :refer [expt]])))) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/ns at (all_your_base.clj:1:1).
; ((:require [clojure.string :as str] (require (quote [clojure.math.numeric-tower :as math :refer [expt]])))) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/ns at (all_your_base.clj:1:1).
; ((:require [clojure.string :as str] (:require (quote [clojure.math.numeric-tower :as math :refer [expt]])))) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/ns at (all_your_base.clj:1:1).
; ((:require [clojure.string :as str] (:require [clojure.math.numeric-tower :as math :refer [expt]]))) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (FileNotFoundException) compiling at (all_your_base.clj:1:1).
; Could not locate clojure/math/numeric_tower__init.class, clojure/math/numeric_tower.clj or clojure/math/numeric_tower.cljc on classpath. Please check that namespaces with dashes use underscores in the Clojure file name.
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/ns at (all_your_base.clj:1:1).
; ((:require [clojure.string :as str] (:require [clojure.math.numeric-tower :as math :refer [expt]]))) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/ns at (all_your_base.clj:1:1).
; ((:require [clojure.string :as str] :require [clojure.math.numeric-tower :as math :refer [expt]])) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/ns at (all_your_base.clj:1:1).
; ((:require [clojure.string :as str] :require [clojure.math.numeric-tower :as math :refer [expt]])) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/ns at (all_your_base.clj:1:1).
; ((:require [clojure.string :as str] :require [clojure.math.numeric-tower :as math :refer [expt]])) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/ns at (all_your_base.clj:1:1).
; ((:require [clojure.string :as str] :require [clojure.math.numeric-tower :as math :refer [expt]])) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/ns at (all_your_base.clj:1:1).
; ((:require [clojure.string :as str] :require [clojure.math.numeric-tower :as math :refer [expt]])) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/ns at (all_your_base.clj:1:1).
; ((:require [clojure.string :as str] (require (quote [clojure.math.numeric-tower :as math :refer [expt]])))) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:6:15).
; Unable to resolve symbol: expt in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (FileNotFoundException) compiling at (all_your_base.clj:3:1).
; Could not locate clojure/math/numeric_tower__init.class, clojure/math/numeric_tower.clj or clojure/math/numeric_tower.cljc on classpath. Please check that namespaces with dashes use underscores in the Clojure file name.
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (FileNotFoundException) at all-your-base/eval24943 (form-init13942491984121570974.clj:3).
; Could not locate clojure/math/numeric_tower__init.class, clojure/math/numeric_tower.clj or clojure/math/numeric_tower.cljc on classpath. Please check that namespaces with dashes use underscores in the Clojure file name.
; Syntax error compiling at (all_your_base.clj:6:15).
; Unable to resolve symbol: expt in this context
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:6:15).
; Unable to resolve symbol: expt in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:8:15).
; Unable to resolve symbol: expt in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:9:15).
; Unable to resolve symbol: expt in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:10:15).
; Unable to resolve symbol: expt in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:10:15).
; Unable to resolve symbol: ex in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (IllegalArgumentException) compiling at (all_your_base.clj:12:1).
; Don't know how to create ISeq from: clojure.core$map$fn__5847
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:12:1).
; Wrong number of args (0) passed to: clojure.core/map
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (IllegalArgumentException) compiling at (all_your_base.clj:12:1).
; Don't know how to create ISeq from: clojure.core$map$fn__5847
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (IllegalArgumentException) compiling at (all_your_base.clj:12:1).
; Don't know how to create ISeq from: clojure.core$map$fn__5847
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (IllegalArgumentException) compiling at (all_your_base.clj:12:1).
; Don't know how to create ISeq from: clojure.core$map$fn__5847
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (IllegalArgumentException) compiling at (all_your_base.clj:12:1).
; Don't know how to create ISeq from: clojure.core$map$fn__5847
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (IllegalArgumentException) compiling at (all_your_base.clj:12:1).
; Don't know how to create ISeq from: clojure.core$map$fn__5847
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:12:1).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (ClassCastException) at all-your-base/convert (all_your_base.clj:10).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:12:1).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:12:1).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:12:1).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
4
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:12:1).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:12:1).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:12:1).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:12:1).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:12:1).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:12:1).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:12:1).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:12:1).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
(1)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:11:1).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:12:1).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:11:1).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
#'all-your-base/convert
clj꞉all-your-base꞉> 
; Execution error (ClassCastException) at all-your-base/eval25627$convert (form-init13942491984121570974.clj:11).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:11:1).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:11:1).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:11:1).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
8
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:11:1).
; class clojure.core$map$fn__5847 cannot be cast to class java.lang.Number (clojure.core$map$fn__5847 is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
8
; Running tests for all-your-base...
; No tests found. 😱, ns: 0, vars: 0
clj꞉all-your-base꞉> 
28
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base_test.clj
#'all-your-base-test/test-both-bases-are-negative
; Running tests for all-your-base-test...
; ERROR in all-your-base-test/test-15-bit-integer (AFn.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (AFn.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (AFn.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (AFn.java:87):
; When both bases are negative, nil is returned
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (AFn.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-empty-list (AFn.java:39):
; Empty input digits returns empty sequence
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:39)
; expected:
(empty? (all-your-base/convert 2 () 10))
; ERROR in all-your-base-test/test-first-base-is-negative (AFn.java:79):
; Negative input base returns nil
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; ERROR in all-your-base-test/test-first-base-is-one (AFn.java:63):
; Input base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:63)
; expected:
(nil? (all-your-base/convert 1 () 10))
; ERROR in all-your-base-test/test-first-base-is-zero (AFn.java:71):
; Input base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:71)
; expected:
(nil? (all-your-base/convert 0 () 10))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (AFn.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (AFn.java:59):
; Invalid digits return nil
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (AFn.java:51):
; Leading zeroes don't affect conversion
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (AFn.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (AFn.java:55):
; Negative digits result in nil
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (AFn.java:83):
; Negative output base returns nil
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (AFn.java:67):
; Output base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (AFn.java:75):
; Output base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (AFn.java:7):
; Base 2 '1' converts to base 10 '1'
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (AFn.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (AFn.java:43):
; 0 converts to 0, no matter the base
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (AFn.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 21, failures: 0, ns: 1, vars: 21
clj꞉all-your-base-test꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (NumberFormatException) compiling at (all_your_base.clj:11:1).
; For input string: "c"
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (NumberFormatException) compiling at (all_your_base.clj:11:1).
; For input string: "c"
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (2) passed to: all-your-base/convert
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:10:21).
; Unable to resolve symbol: base in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:10:21).
; Unable to resolve symbol: base in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:9:21).
; Unable to resolve symbol: base in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:9:21).
; Unable to resolve symbol: base in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:9:21).
; Unable to resolve symbol: base in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:9:21).
; Unable to resolve symbol: base in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:9:21).
; Unable to resolve symbol: base in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
8
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (Numbers.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: java.lang.ArithmeticException: integer overflow (Numbers.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
33
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
21
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? -7))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
20
; ERROR in all-your-base-test/test-empty-list (RT.java:39):
; Empty input digits returns empty sequence
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: java.lang.Long (RT.java:39)
; expected:
(empty? (all-your-base/convert 2 () 10))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? 10))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? 0))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? 0))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
59058
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? 132))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
1000002
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
3
; ERROR in all-your-base-test/test-negative-digit (Numbers.java):
; Negative digits result in nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? -7))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? 6))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? 0))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
10
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
32
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
1
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
289
; 21 tests finished, problems found. 😭 errors: 3, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
28
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
8
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
nil
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
nil
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
nil
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
nil
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
nil
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
nil
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
nil
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
nil
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
nil
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
nil
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
nil
; 21 tests finished, problems found. 😭 errors: 0, failures: 11, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
8
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
()
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
()
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
()
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
()
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
()
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
()
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
()
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
()
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 0, failures: 20, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:10:1).
; Wrong number of args (0) passed to: clojure.core/reduce
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
8
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
()
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
()
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
()
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
()
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
()
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
()
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
()
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
()
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 0, failures: 20, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:10:1).
; Wrong number of args (0) passed to: clojure.core/map
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
8
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
#function[clojure.core/map/fn--5847]
; ERROR in all-your-base-test/test-empty-list (RT.java:39):
; Empty input digits returns empty sequence
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map$fn__5847 (RT.java:39)
; expected:
(empty? (all-your-base/convert 2 () 10))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
#function[clojure.core/map/fn--5847]
; 21 tests finished, problems found. 😭 errors: 1, failures: 20, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
8
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
#function[clojure.core/map/fn--5847]
; ERROR in all-your-base-test/test-empty-list (RT.java:39):
; Empty input digits returns empty sequence
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map$fn__5847 (RT.java:39)
; expected:
(empty? (all-your-base/convert 2 () 10))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
#function[clojure.core/map/fn--5847]
; 21 tests finished, problems found. 😭 errors: 1, failures: 20, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:10:21).
; Unable to resolve symbol: base in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (NumberFormatException) compiling at (all_your_base.clj:11:1).
; For input string: "c"
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (NumberFormatException) compiling at (all_your_base.clj:11:1).
; For input string: "c"
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (NumberFormatException) at java.lang.NumberFormatException/forInputString (NumberFormatException.java:65).
; For input string: "c"
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error reading source at (all_your_base.clj:10:13).
; Unmatched delimiter: )
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (NumberFormatException) compiling at (all_your_base.clj:11:1).
; For input string: "c"
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:10:5).
; Unable to resolve symbol: r in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error reading source at (all_your_base.clj:10:14).
; Unmatched delimiter: )
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error reading source at (all_your_base.clj:10:12).
; Unmatched delimiter: )
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
8
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (AFn.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (AFn.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (AFn.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (AFn.java:87):
; When both bases are negative, nil is returned
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (AFn.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-empty-list (AFn.java:39):
; Empty input digits returns empty sequence
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:39)
; expected:
(empty? (all-your-base/convert 2 () 10))
; ERROR in all-your-base-test/test-first-base-is-negative (AFn.java:79):
; Negative input base returns nil
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; ERROR in all-your-base-test/test-first-base-is-one (AFn.java:63):
; Input base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:63)
; expected:
(nil? (all-your-base/convert 1 () 10))
; ERROR in all-your-base-test/test-first-base-is-zero (AFn.java:71):
; Input base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:71)
; expected:
(nil? (all-your-base/convert 0 () 10))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (AFn.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (AFn.java:59):
; Invalid digits return nil
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (AFn.java:51):
; Leading zeroes don't affect conversion
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (AFn.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (AFn.java:55):
; Negative digits result in nil
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (AFn.java:83):
; Negative output base returns nil
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (AFn.java:67):
; Output base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (AFn.java:75):
; Output base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (AFn.java:7):
; Base 2 '1' converts to base 10 '1'
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (AFn.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (AFn.java:43):
; 0 converts to 0, no matter the base
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (AFn.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: all-your-base/convert (AFn.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 21, failures: 0, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Error printing return value (NumberFormatException) at java.lang.NumberFormatException/forInputString (NumberFormatException.java:65).
; For input string: "c"
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Error printing return value (NumberFormatException) at java.lang.NumberFormatException/forInputString (NumberFormatException.java:65).
; For input string: "c"
; Evaluation of file all_your_base.clj failed: class clojure.lang.ExceptionInfo
#'all-your-base/convert
clj꞉all-your-base꞉> 
; Error printing return value (NumberFormatException) at java.lang.NumberFormatException/forInputString (NumberFormatException.java:65).
; For input string: "c"
clj꞉all-your-base꞉> 
#'all-your-base/convert
clj꞉all-your-base꞉> 
; Execution error (NumberFormatException) at java.lang.NumberFormatException/forInputString (NumberFormatException.java:65).
; For input string: "c"
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (3) passed to: all-your-base/convert
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Error printing return value (NumberFormatException) at java.lang.NumberFormatException/forInputString (NumberFormatException.java:65).
; For input string: "c"
; Evaluation of file all_your_base.clj failed: class clojure.lang.ExceptionInfo
; Evaluating file: all_your_base.clj
; Error printing return value (NumberFormatException) at java.lang.NumberFormatException/forInputString (NumberFormatException.java:65).
; For input string: "c"
; Evaluation of file all_your_base.clj failed: class clojure.lang.ExceptionInfo
; Error printing return value (NumberFormatException) at java.lang.NumberFormatException/forInputString (NumberFormatException.java:65).
; For input string: "c"
clj꞉all-your-base꞉> 
#'all-your-base/convert
clj꞉all-your-base꞉> 
; Execution error (NumberFormatException) at java.lang.NumberFormatException/forInputString (NumberFormatException.java:65).
; For input string: "c"
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (2) passed to: all-your-base/convert
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (2) passed to: all-your-base/convert
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error reading source at (all_your_base.clj:10:1).
; EOF while reading, starting at line 8
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:10:1).
; Wrong number of args (2) passed to: all-your-base/convert
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
()
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
()
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
()
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
()
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
()
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
()
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
()
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
()
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
()
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 0, failures: 20, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error reading source at (all_your_base.clj:10:1).
; EOF while reading string
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
()
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
()
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
()
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
()
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
()
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
()
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
()
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
()
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
()
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 0, failures: 20, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:10:1).
; Wrong number of args (4) passed to: all-your-base/convert
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
()
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
()
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
()
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
()
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
()
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
()
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
()
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
()
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
()
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 0, failures: 20, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
()
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
()
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
()
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
()
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
()
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
()
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
()
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
()
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
()
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 0, failures: 20, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:9:3).
; Wrong number of args (0) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:9:3).
; Wrong number of args (1) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:9:3).
; Wrong number of args (1) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:9:3).
; Wrong number of args (1) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:9:3).
; Wrong number of args (1) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
(6 9 12)
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(9 138 180)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(3 0 3 0 3 0)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(3 0 3)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (3)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(12 6)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (3)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(6 30)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (3 6 3 0 3 0)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 18 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (3 -3 3 0 3 0)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (3)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (3 0 3 0 3 0)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (21)))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
(3)
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(15)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(3 3 6 0)
; 21 tests finished, problems found. 😭 errors: 0, failures: 19, ns: 1, vars: 21
clj꞉all-your-base꞉> 
(6 9 12)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
(6 9 12)
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(9 138 180)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(3 0 3 0 3 0)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(3 0 3)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (3)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(12 6)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (3)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(6 30)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (3 6 3 0 3 0)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 18 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (3 -3 3 0 3 0)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (3)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (3 0 3 0 3 0)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (21)))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
(3)
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(15)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(3 3 6 0)
; 21 tests finished, problems found. 😭 errors: 0, failures: 19, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error reading source at (all_your_base.clj:10:12).
; Unmatched delimiter: )
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Error printing return value (IllegalArgumentException) at clojure.lang.RT/seqFrom (RT.java:553).
; Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529
; Evaluation of file all_your_base.clj failed: class clojure.lang.ExceptionInfo
; Evaluating file: all_your_base.clj
; Error printing return value (IllegalArgumentException) at clojure.lang.RT/seqFrom (RT.java:553).
; Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529
; Evaluation of file all_your_base.clj failed: class clojure.lang.ExceptionInfo
; Error printing return value (IllegalArgumentException) at clojure.lang.RT/seqFrom (RT.java:553).
; Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Error printing return value (ClassCastException) at clojure.lang.Numbers/isPos (Numbers.java:121).
; class clojure.lang.PersistentList cannot be cast to class java.lang.Number (clojure.lang.PersistentList is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.ExceptionInfo
; Error printing return value (ClassCastException) at clojure.lang.Numbers/isPos (Numbers.java:121).
; class clojure.lang.PersistentList cannot be cast to class java.lang.Number (clojure.lang.PersistentList is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling count at (all_your_base.clj:10:18).
; Wrong number of args (0) passed to: clojure.core/count--inliner--5506
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
(0 2 4 0 3 6 0 4 8)
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(0 3 6 0 46 92 0 60 120)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(0
 1
 2
 3
 4
 5
 0
 0
 0
 0
 0
 0
 0
 1
 2
 3
 4
 5
 0
 0
 0
 0
 0
 0
 0
 1
 2
 3
 4
 5
 0
 0
 0
 0
 0
 0)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(0 1 2 0 0 0 0 1 2)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(0 4 0 2)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(0 2 0 10)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not
 (nil?
  (0
   1
   2
   3
   4
   5
   0
   2
   4
   6
   8
   10
   0
   1
   2
   3
   4
   5
   0
   0
   0
   0
   0
   0
   0
   1
   2
   3
   4
   5
   0
   0
   0
   0
   0
   0)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 0 0 0 6 12 0 0 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0 0 0 0 0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not
 (nil?
  (0
   1
   2
   3
   4
   5
   0
   -1
   -2
   -3
   -4
   -5
   0
   1
   2
   3
   4
   5
   0
   0
   0
   0
   0
   0
   0
   1
   2
   3
   4
   5
   0
   0
   0
   0
   0
   0)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not
 (nil?
  (0
   1
   2
   3
   4
   5
   0
   0
   0
   0
   0
   0
   0
   1
   2
   3
   4
   5
   0
   0
   0
   0
   0
   0
   0
   1
   2
   3
   4
   5
   0
   0
   0
   0
   0
   0)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
(0)
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(0)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(0 1 2 3 0 1 2 3 0 2 4 6 0 0 0 0)
; 21 tests finished, problems found. 😭 errors: 0, failures: 19, ns: 1, vars: 21
clj꞉all-your-base꞉> 
(0 2 4 0 3 6 0 4 8)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:10:33).
; Unable to resolve symbol: n in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:9:33).
; Unable to resolve symbol: n in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
(0 1 2)
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(0 1 2)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(0 1 2 3 4 5)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(0 1 2)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(0 1)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(0 1)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (0 1 2 3 4 5)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 1 2)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 1 2)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (0 1 2 3 4 5)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (0 1 2 3 4 5)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
(0)
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(0)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(0 1 2 3)
; 21 tests finished, problems found. 😭 errors: 0, failures: 19, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:9:36).
; Unable to resolve symbol: n in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Error printing return value (ClassCastException) at all-your-base/convert$iter$fn$fn (all_your_base.clj:9).
; class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.ExceptionInfo
; Error printing return value (ClassCastException) at all-your-base/convert$iter$fn$fn (all_your_base.clj:9).
; class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Error printing return value (ClassCastException) at all-your-base/convert$iter$fn$fn (all_your_base.clj:9).
; class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.ExceptionInfo
; Error printing return value (ClassCastException) at all-your-base/convert$iter$fn$fn (all_your_base.clj:9).
; class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:9:3).
; Wrong number of args (0) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:9:3).
; Wrong number of args (1) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:9:3).
; Wrong number of args (1) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:9:3).
; Wrong number of args (1) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
(() () ())
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(() () ())
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(() () () () () ())
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(() () ())
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (())))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(() ())
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (())))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(() ())
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (() () () () () ())))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(() () ())
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(() () ())
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (() () () () () ())))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (())))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (() () () () () ())))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (())))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
(())
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(())
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
(())
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(() () () ())
; 21 tests finished, problems found. 😭 errors: 0, failures: 20, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
(2 3 4)
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(3 46 60)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(1 0 1 0 1 0)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(1 0 1)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(4 2)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(2 10)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (1 2 1 0 1 0)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 6 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (1 -1 1 0 1 0)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (1 0 1 0 1 0)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (7)))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(5)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(1 1 2 0)
; 21 tests finished, problems found. 😭 errors: 0, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
(20 30 40)
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(291 4462 5820)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(2 0 2 0 2 0)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(2 0 2)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (-2)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(40 20)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (-2)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(32 160)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (2 4 2 0 2 0)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 42 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (2 -2 2 0 2 0)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (2)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (2 0 2 0 2 0)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (70)))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
(2)
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(50)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(3 3 6 0)
; 21 tests finished, problems found. 😭 errors: 0, failures: 19, ns: 1, vars: 21
clj꞉all-your-base꞉> 
(20 30 40)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Error printing return value (ClassCastException) at clojure.lang.Numbers/multiply (Numbers.java:173).
; class clojure.lang.PersistentList$EmptyList cannot be cast to class java.lang.Number (clojure.lang.PersistentList$EmptyList is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.ExceptionInfo
; Evaluating file: all_your_base.clj
; Error printing return value (ArityException) at clojure.lang.AFn/throwArity (AFn.java:429).
; Wrong number of args (1) passed to: all-your-base/exp
; Evaluation of file all_your_base.clj failed: class clojure.lang.ExceptionInfo
; Evaluating file: all_your_base.clj
(200 300 400)
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(28227 432814 564540)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(4 0 4 0 4 0)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(4 0 4)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (4)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(400 200)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (4)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(512 2560)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (4 8 4 0 4 0)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 294 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (4 -4 4 0 4 0)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (4)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (4 0 4 0 4 0)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (700)))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
(4)
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(500)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(9 9 18 0)
; 21 tests finished, problems found. 😭 errors: 0, failures: 19, ns: 1, vars: 21
clj꞉all-your-base꞉> 
(200 300 400)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding for at (all_your_base.clj:9:3).
; for requires an even number of forms in binding vector in all-your-base:9
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:9:23).
; Unable to resolve symbol: n in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:9:23).
; Unable to resolve symbol: n in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:9:33).
; Unable to resolve symbol: n in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
(0 100 200)
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(0 9409 18818)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(0 4 8 12 16 20)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(0 4 8)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(0 100)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(0 256)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (0 4 8 12 16 20)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 49 98)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 100 200)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (0 4 8 12 16 20)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (0 4 8 12 16 20)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
(0)
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(0)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(0 9 18 27)
; 21 tests finished, problems found. 😭 errors: 0, failures: 19, ns: 1, vars: 21
clj꞉all-your-base꞉> 
(0 100 200)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
(0 100 200)
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(0 9409 18818)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(0 4 8 12 16 20)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(0 4 8)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(0 100)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(0 256)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (0 4 8 12 16 20)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 49 98)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 100 200)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (0 4 8 12 16 20)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (0 4 8 12 16 20)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
(0)
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(0)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(0 9 18 27)
; 21 tests finished, problems found. 😭 errors: 0, failures: 19, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
(0 100 200)
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(0 9409 18818)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(0 4 8 12 16 20)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(0 4 8)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(0 100)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(0 256)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (0 4 8 12 16 20)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 49 98)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 100 200)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (0 4 8 12 16 20)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (0 4 8 12 16 20)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
(0)
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(0)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(0 9 18 27)
; 21 tests finished, problems found. 😭 errors: 0, failures: 19, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
()
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(0 9409 18818)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(0 4 8 12 16 20)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(0 4 8)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(0 100)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(0 256)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (0 4 8 12 16 20)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 49 98)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 100 200)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (0 4 8 12 16 20)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (0 4 8 12 16 20)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
(0)
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(0)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(0 9 18 27)
; 21 tests finished, problems found. 😭 errors: 0, failures: 19, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:12:1).
; Wrong number of args (0) passed to: clojure.lang.PersistentVector
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
2
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(0 9409 18818)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(0 4 8 12 16 20)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(0 4 8)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(0 100)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(0 256)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (0 4 8 12 16 20)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 49 98)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 100 200)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (0 4 8 12 16 20)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (0 4 8 12 16 20)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
(0)
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(0)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(0 9 18 27)
; 21 tests finished, problems found. 😭 errors: 0, failures: 19, ns: 1, vars: 21
clj꞉all-your-base꞉> 
2
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
2
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (all_your_base.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (all_your_base.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (all_your_base.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (all_your_base.clj:87):
; When both bases are negative, nil is returned
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (all_your_base.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-first-base-is-negative (all_your_base.clj:79):
; Negative input base returns nil
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (all_your_base.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (all_your_base.clj:59):
; Invalid digits return nil
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (all_your_base.clj:51):
; Leading zeroes don't affect conversion
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (all_your_base.clj:47):
; 0 converts to 0, no matter the how many zeroes
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (all_your_base.clj:55):
; Negative digits result in nil
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (all_your_base.clj:83):
; Negative output base returns nil
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (all_your_base.clj:67):
; Output base of 1 returns nil
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (all_your_base.clj:75):
; Output base of 0 returns nil
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (all_your_base.clj:7):
; Base 2 '1' converts to base 10 '1'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (all_your_base.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (all_your_base.clj:43):
; 0 converts to 0, no matter the base
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (all_your_base.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 18, failures: 2, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Error printing return value (ClassCastException) at all-your-base/convert$iter$fn$fn (all_your_base.clj:9).
; class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:12:1).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:12:1).
; class clojure.lang.PersistentList$EmptyList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList$EmptyList and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:12:1).
; class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:12:1).
; class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (ClassCastException) at all-your-base/eval28206 (form-init13942491984121570974.clj:12).
; class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (all_your_base.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (all_your_base.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (all_your_base.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (all_your_base.clj:87):
; When both bases are negative, nil is returned
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (all_your_base.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-first-base-is-negative (all_your_base.clj:79):
; Negative input base returns nil
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (all_your_base.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (all_your_base.clj:59):
; Invalid digits return nil
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (all_your_base.clj:51):
; Leading zeroes don't affect conversion
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (all_your_base.clj:47):
; 0 converts to 0, no matter the how many zeroes
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (all_your_base.clj:55):
; Negative digits result in nil
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (all_your_base.clj:83):
; Negative output base returns nil
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (all_your_base.clj:67):
; Output base of 1 returns nil
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (all_your_base.clj:75):
; Output base of 0 returns nil
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (all_your_base.clj:7):
; Base 2 '1' converts to base 10 '1'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (all_your_base.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (all_your_base.clj:43):
; 0 converts to 0, no matter the base
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (all_your_base.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 18, failures: 2, ns: 1, vars: 21
clj꞉all-your-base꞉> 
nil
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:12:1).
; Unable to resolve symbol: index in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:12:1).
; Wrong number of args (2) passed to: clojure.core/indexed?
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
false
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (all_your_base.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (all_your_base.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (all_your_base.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (all_your_base.clj:87):
; When both bases are negative, nil is returned
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (all_your_base.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-first-base-is-negative (all_your_base.clj:79):
; Negative input base returns nil
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (all_your_base.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (all_your_base.clj:59):
; Invalid digits return nil
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (all_your_base.clj:51):
; Leading zeroes don't affect conversion
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (all_your_base.clj:47):
; 0 converts to 0, no matter the how many zeroes
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (all_your_base.clj:55):
; Negative digits result in nil
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (all_your_base.clj:83):
; Negative output base returns nil
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (all_your_base.clj:67):
; Output base of 1 returns nil
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (all_your_base.clj:75):
; Output base of 0 returns nil
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (all_your_base.clj:7):
; Base 2 '1' converts to base 10 '1'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (all_your_base.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (all_your_base.clj:43):
; 0 converts to 0, no matter the base
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (all_your_base.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: java.lang.ClassCastException: class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app') (all_your_base.clj:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 18, failures: 2, ns: 1, vars: 21
clj꞉all-your-base꞉> 
false
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Error printing return value (ClassCastException) at all-your-base/convert$iter$fn$fn (all_your_base.clj:9).
; class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.ExceptionInfo
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (0) passed to: clojure.core/doseq
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:9:37).
; Unable to resolve symbol: i in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (0) passed to: clojure.core/doseq
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (0) passed to: clojure.core/doseq
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:10:1).
; class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (0) passed to: clojure.core/doseq
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (0) passed to: clojure.core/doseq
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (0) passed to: clojure.core/doseq
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Error printing return value (IllegalArgumentException) at clojure.lang.RT/seqFrom (RT.java:553).
; Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding doseq at (all_your_base.clj:11:1).
; doseq requires an even number of forms in binding vector in all-your-base:11
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (0) passed to: clojure.core/map-indexed
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (IllegalArgumentException) compiling at (all_your_base.clj:11:1).
; Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (IllegalArgumentException) compiling at (all_your_base.clj:11:1).
; Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (IllegalArgumentException) compiling at (all_your_base.clj:11:1).
; Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (IllegalArgumentException) compiling at (all_your_base.clj:11:1).
; Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (IllegalArgumentException) compiling at (all_your_base.clj:11:1).
; Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (IllegalArgumentException) compiling at (all_your_base.clj:11:1).
; Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (IllegalArgumentException) at all-your-base/eval29093 (form-init13942491984121570974.clj:11).
; Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (RT.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (RT.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (RT.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (RT.java:87):
; When both bases are negative, nil is returned
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (RT.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-empty-list (RT.java:39):
; Empty input digits returns empty sequence
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:39)
; expected:
(empty? (all-your-base/convert 2 () 10))
; ERROR in all-your-base-test/test-first-base-is-negative (RT.java:79):
; Negative input base returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; ERROR in all-your-base-test/test-first-base-is-one (RT.java:63):
; Input base of 1 returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:63)
; expected:
(nil? (all-your-base/convert 1 () 10))
; ERROR in all-your-base-test/test-first-base-is-zero (RT.java:71):
; Input base of 0 returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:71)
; expected:
(nil? (all-your-base/convert 0 () 10))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (RT.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (RT.java:59):
; Invalid digits return nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (RT.java:51):
; Leading zeroes don't affect conversion
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (RT.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (RT.java:55):
; Negative digits result in nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (RT.java:83):
; Negative output base returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (RT.java:67):
; Output base of 1 returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (RT.java:75):
; Output base of 0 returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (RT.java:7):
; Base 2 '1' converts to base 10 '1'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (RT.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (RT.java:43):
; 0 converts to 0, no matter the base
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (RT.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 21, failures: 0, ns: 1, vars: 21
clj꞉all-your-base꞉> 
nil
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (RT.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (RT.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (RT.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (RT.java:87):
; When both bases are negative, nil is returned
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (RT.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-empty-list (RT.java:39):
; Empty input digits returns empty sequence
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:39)
; expected:
(empty? (all-your-base/convert 2 () 10))
; ERROR in all-your-base-test/test-first-base-is-negative (RT.java:79):
; Negative input base returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; ERROR in all-your-base-test/test-first-base-is-one (RT.java:63):
; Input base of 1 returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:63)
; expected:
(nil? (all-your-base/convert 1 () 10))
; ERROR in all-your-base-test/test-first-base-is-zero (RT.java:71):
; Input base of 0 returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:71)
; expected:
(nil? (all-your-base/convert 0 () 10))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (RT.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (RT.java:59):
; Invalid digits return nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (RT.java:51):
; Leading zeroes don't affect conversion
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (RT.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (RT.java:55):
; Negative digits result in nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (RT.java:83):
; Negative output base returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (RT.java:67):
; Output base of 1 returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (RT.java:75):
; Output base of 0 returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (RT.java:7):
; Base 2 '1' converts to base 10 '1'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (RT.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (RT.java:43):
; 0 converts to 0, no matter the base
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (RT.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map_indexed$fn__8529 (RT.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 21, failures: 0, ns: 1, vars: 21
clj꞉all-your-base꞉> 
nil
clj꞉all-your-base꞉> 
; Syntax error compiling at (all_your_base.clj:11:46).
; Unable to resolve symbol: i in this context
clj꞉all-your-base꞉> 
nil
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(28227 432814 564540)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(4 0 4 0 4 0)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(4 0 4)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (4)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(400 200)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (4)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(512 2560)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (4 8 4 0 4 0)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 294 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (4 -4 4 0 4 0)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (4)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (4 0 4 0 4 0)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (700)))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
(4)
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(500)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(9 9 18 0)
; 21 tests finished, problems found. 😭 errors: 0, failures: 19, ns: 1, vars: 21
clj꞉all-your-base꞉> 
(200 300 400)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(3 4462 564540)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(1 0 4 0 16 0)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(1 0 4)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(4 20)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(2 160)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (1 4 4 0 16 0)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 42 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (1 -2 4 0 16 0)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (1 0 4 0 16 0)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (7)))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(5)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(1 3 18 0)
; 21 tests finished, problems found. 😭 errors: 0, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
(2 30 400)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(3 4462 564540)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(1 0 4 0 16 0)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(1 0 4)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(4 20)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(2 160)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (1 4 4 0 16 0)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 42 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (1 -2 4 0 16 0)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (1 0 4 0 16 0)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (7)))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(5)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(1 3 18 0)
; 21 tests finished, problems found. 😭 errors: 0, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:10:47).
; Unable to resolve symbol: startBase in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(3 4462 564540)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(1 0 4 0 16 0)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(1 0 4)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(4 20)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(2 160)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (1 4 4 0 16 0)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 42 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (1 -2 4 0 16 0)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (1 0 4 0 16 0)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (7)))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(5)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(1 3 18 0)
; 21 tests finished, problems found. 😭 errors: 0, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/let at (all_your_base.clj:9:3).
; () - failed: Insufficient input at: [:bindings] spec: :clojure.core.specs.alpha/bindings
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(3 4462 564540)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(1 0 4 0 16 0)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(1 0 4)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(4 20)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(2 160)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (1 4 4 0 16 0)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 42 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (1 -2 4 0 16 0)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (1 0 4 0 16 0)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (7)))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(5)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(1 3 18 0)
; 21 tests finished, problems found. 😭 errors: 0, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/let at (all_your_base.clj:9:3).
; [numVec] - failed: even-number-of-forms? at: [:bindings] spec: :clojure.core.specs.alpha/bindings
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(3 4462 564540)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(1 0 4 0 16 0)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(1 0 4)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(4 20)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(2 160)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (1 4 4 0 16 0)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 42 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (1 -2 4 0 16 0)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (1 0 4 0 16 0)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (7)))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(5)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(1 3 18 0)
; 21 tests finished, problems found. 😭 errors: 0, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/let at (all_your_base.clj:9:3).
; [num] - failed: even-number-of-forms? at: [:bindings] spec: :clojure.core.specs.alpha/bindings
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(3 4462 564540)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(1 0 4 0 16 0)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(1 0 4)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(4 20)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(2 160)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (1 4 4 0 16 0)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 42 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (1 -2 4 0 16 0)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (1 0 4 0 16 0)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (7)))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(5)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(1 3 18 0)
; 21 tests finished, problems found. 😭 errors: 0, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(3 4462 564540)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(1 0 4 0 16 0)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(1 0 4)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(4 20)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(2 160)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (1 4 4 0 16 0)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 42 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (1 -2 4 0 16 0)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (1 0 4 0 16 0)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (7)))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(5)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(1 3 18 0)
; 21 tests finished, problems found. 😭 errors: 0, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:9:35).
; Unable to resolve symbol: rever in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (0) passed to: clojure.core/reverse
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(60 4462 28227)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(0 2 0 8 0 32)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(1 0 4)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(2 40)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(10 32)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (0 2 0 8 32 32)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 42 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (0 2 0 8 -16 32)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (0 2 0 8 0 32)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (7)))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(5)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(0 6 9 27)
; 21 tests finished, problems found. 😭 errors: 0, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
(4 30 200)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(60 4462 28227)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(0 2 0 8 0 32)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(1 0 4)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(2 40)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(10 32)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (0 2 0 8 32 32)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 42 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (0 2 0 8 -16 32)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (0 2 0 8 0 32)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (7)))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(5)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(0 6 9 27)
; 21 tests finished, problems found. 😭 errors: 0, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:11:1).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IFn (clojure.lang.LazySeq and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/let at (all_your_base.clj:9:3).
; (for [[i n] (map-indexed vector (reverse nums))] (* n (exp startBase i))) - failed: vector? at: [:bindings] spec: :clojure.core.specs.alpha/bindings
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(60 4462 28227)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(0 2 0 8 0 32)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(1 0 4)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(2 40)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(10 32)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (0 2 0 8 32 32)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 42 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (0 2 0 8 -16 32)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (0 2 0 8 0 32)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (7)))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(5)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(0 6 9 27)
; 21 tests finished, problems found. 😭 errors: 0, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
nil
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
nil
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
nil
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
nil
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
nil
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
nil
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
nil
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
nil
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
nil
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
nil
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
nil
; 21 tests finished, problems found. 😭 errors: 0, failures: 11, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (core.clj):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (core.clj):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (core.clj):
; Base 2 '1 0 1' converts to base 10 '5'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (RT.java):
; When both bases are negative, nil is returned
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (core.clj):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-empty-list (RT.java):
; Empty input digits returns empty sequence
; error: java.lang.StackOverflowError (RT.java)
; expected:
(empty? (all-your-base/convert 2 () 10))
; ERROR in all-your-base-test/test-first-base-is-negative (RT.java):
; Negative input base returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; ERROR in all-your-base-test/test-first-base-is-one (RT.java):
; Input base of 1 returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 1 () 10))
; ERROR in all-your-base-test/test-first-base-is-zero (RT.java):
; Input base of 0 returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 0 () 10))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (core.clj):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (RT.java):
; Invalid digits return nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (core.clj):
; Leading zeroes don't affect conversion
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (core.clj):
; 0 converts to 0, no matter the how many zeroes
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (RT.java):
; Negative digits result in nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (RT.java):
; Negative output base returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (RT.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (RT.java):
; Output base of 0 returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (core.clj):
; Base 2 '1' converts to base 10 '1'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (core.clj):
; Base 10 '5' converts to base 2 '1 0 1'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (core.clj):
; 0 converts to 0, no matter the base
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (core.clj):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 21, failures: 0, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (core.clj):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (core.clj):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (core.clj):
; Base 2 '1 0 1' converts to base 10 '5'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (RT.java):
; When both bases are negative, nil is returned
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (core.clj):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-empty-list (RT.java):
; Empty input digits returns empty sequence
; error: java.lang.StackOverflowError (RT.java)
; expected:
(empty? (all-your-base/convert 2 () 10))
; ERROR in all-your-base-test/test-first-base-is-negative (RT.java):
; Negative input base returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; ERROR in all-your-base-test/test-first-base-is-one (RT.java):
; Input base of 1 returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 1 () 10))
; ERROR in all-your-base-test/test-first-base-is-zero (RT.java):
; Input base of 0 returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 0 () 10))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (core.clj):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (RT.java):
; Invalid digits return nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (core.clj):
; Leading zeroes don't affect conversion
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (core.clj):
; 0 converts to 0, no matter the how many zeroes
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (RT.java):
; Negative digits result in nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (RT.java):
; Negative output base returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (RT.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (RT.java):
; Output base of 0 returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (core.clj):
; Base 2 '1' converts to base 10 '1'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (core.clj):
; Base 10 '5' converts to base 2 '1 0 1'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (core.clj):
; 0 converts to 0, no matter the base
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (core.clj):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 21, failures: 0, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/let at (all_your_base.clj:9:3).
; [vals (for [[i n] (map-indexed vector (reverse nums))] (* n (exp startBase i))) (convert 10 (quote (2 3 4)) 2)] - failed: even-number-of-forms? at: [:bindings] spec: :clojure.core.specs.alpha/bindings
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (core.clj):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (core.clj):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (core.clj):
; Base 2 '1 0 1' converts to base 10 '5'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (RT.java):
; When both bases are negative, nil is returned
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (core.clj):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-empty-list (RT.java):
; Empty input digits returns empty sequence
; error: java.lang.StackOverflowError (RT.java)
; expected:
(empty? (all-your-base/convert 2 () 10))
; ERROR in all-your-base-test/test-first-base-is-negative (RT.java):
; Negative input base returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; ERROR in all-your-base-test/test-first-base-is-one (core.clj):
; Input base of 1 returns nil
; error: java.lang.StackOverflowError (core.clj)
; expected:
(nil? (all-your-base/convert 1 () 10))
; ERROR in all-your-base-test/test-first-base-is-zero (RT.java):
; Input base of 0 returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 0 () 10))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (core.clj):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (RT.java):
; Invalid digits return nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (core.clj):
; Leading zeroes don't affect conversion
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (core.clj):
; 0 converts to 0, no matter the how many zeroes
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (RT.java):
; Negative digits result in nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (RT.java):
; Negative output base returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (RT.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (RT.java):
; Output base of 0 returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (core.clj):
; Base 2 '1' converts to base 10 '1'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (core.clj):
; Base 10 '5' converts to base 2 '1 0 1'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (core.clj):
; 0 converts to 0, no matter the base
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (core.clj):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: java.lang.StackOverflowError (core.clj)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 21, failures: 0, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
nil
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
nil
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
nil
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
nil
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
nil
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
nil
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
nil
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
nil
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
nil
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
nil
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
nil
; 21 tests finished, problems found. 😭 errors: 0, failures: 11, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
nil
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
nil
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
nil
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
nil
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
nil
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
nil
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
nil
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
nil
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
nil
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
nil
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
nil
; 21 tests finished, problems found. 😭 errors: 0, failures: 11, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
32749
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
42
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
5
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? 1))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
42
; ERROR in all-your-base-test/test-empty-list (RT.java:39):
; Empty input digits returns empty sequence
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: java.lang.Long (RT.java:39)
; expected:
(empty? (all-your-base/convert 2 () 10))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? 1))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? 0))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? 0))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
42
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? 74))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
42
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
0
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? 26))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? 1))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? 42))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? 7))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
1
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
5
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
0
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
42
; 21 tests finished, problems found. 😭 errors: 1, failures: 20, ns: 1, vars: 21
clj꞉all-your-base꞉> 
#'all-your-base/convert
clj꞉all-your-base꞉> 
234
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
32749
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
42
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
5
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? 1))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
42
; ERROR in all-your-base-test/test-empty-list (RT.java:39):
; Empty input digits returns empty sequence
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: java.lang.Long (RT.java:39)
; expected:
(empty? (all-your-base/convert 2 () 10))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? 1))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? 0))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? 0))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
42
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? 74))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
42
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
0
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? 26))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? 1))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? 42))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? 7))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
1
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
5
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
0
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
42
; 21 tests finished, problems found. 😭 errors: 1, failures: 20, ns: 1, vars: 21
clj꞉all-your-base꞉> 
234
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
32749
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
42
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
5
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? 1))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
42
; ERROR in all-your-base-test/test-empty-list (RT.java:39):
; Empty input digits returns empty sequence
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: java.lang.Long (RT.java:39)
; expected:
(empty? (all-your-base/convert 2 () 10))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? 1))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? 0))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? 0))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
42
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? 74))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
42
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
0
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? 26))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? 1))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? 42))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? 7))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
1
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
5
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
0
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
42
; 21 tests finished, problems found. 😭 errors: 1, failures: 20, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
32749
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
42
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
5
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? 1))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
42
; ERROR in all-your-base-test/test-empty-list (RT.java:39):
; Empty input digits returns empty sequence
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: java.lang.Long (RT.java:39)
; expected:
(empty? (all-your-base/convert 2 () 10))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? 1))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? 0))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? 0))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
42
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? 74))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
42
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
0
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? 26))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? 1))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? 42))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? 7))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
1
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
5
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
0
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
42
; 21 tests finished, problems found. 😭 errors: 1, failures: 20, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/defn at (all_your_base.clj:8:1).
; () - failed: Insufficient input at: [:fn-tail] spec: :clojure.core.specs.alpha/defn-args
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/defn at (all_your_base.clj:8:1).
; () - failed: Insufficient input at: [:fn-tail] spec: :clojure.core.specs.alpha/defn-args
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/defn at (all_your_base.clj:8:1).
; () - failed: Insufficient input at: [:fn-tail] spec: :clojure.core.specs.alpha/defn-args
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
32749
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
42
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
5
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? 1))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
42
; ERROR in all-your-base-test/test-empty-list (RT.java:39):
; Empty input digits returns empty sequence
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: java.lang.Long (RT.java:39)
; expected:
(empty? (all-your-base/convert 2 () 10))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? 1))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? 0))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? 0))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
42
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? 74))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
42
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
0
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? 26))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? 1))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? 42))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? 7))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
1
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
5
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
0
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
42
; 21 tests finished, problems found. 😭 errors: 1, failures: 20, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
32749
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
42
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
5
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? 1))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
42
; ERROR in all-your-base-test/test-empty-list (RT.java:39):
; Empty input digits returns empty sequence
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: java.lang.Long (RT.java:39)
; expected:
(empty? (all-your-base/convert 2 () 10))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? 1))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? 0))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? 0))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
42
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? 74))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
42
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
0
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? 26))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? 1))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? 42))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? 7))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
1
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
5
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
0
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
42
; 21 tests finished, problems found. 😭 errors: 1, failures: 20, ns: 1, vars: 21
clj꞉all-your-base꞉> 
156
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(60 4462 28227)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(0 2 0 8 0 32)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(1 0 4)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(2 40)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(10 32)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (0 2 0 8 32 32)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 42 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (0 2 0 8 -16 32)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (0 2 0 8 0 32)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (7)))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(5)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(0 6 9 27)
; 21 tests finished, problems found. 😭 errors: 0, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
(4 24 128)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:13:1).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IFn (clojure.lang.LazySeq and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
#function[clojure.core/map/fn--5847]
; ERROR in all-your-base-test/test-empty-list (RT.java:39):
; Empty input digits returns empty sequence
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.core$map$fn__5847 (RT.java:39)
; expected:
(empty? (all-your-base/convert 2 () 10))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? #function[clojure.core/map/fn--5847]))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
#function[clojure.core/map/fn--5847]
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
#function[clojure.core/map/fn--5847]
; 21 tests finished, problems found. 😭 errors: 1, failures: 20, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error reading source at (all_your_base.clj:12:16).
; Unmatched delimiter: )
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (AFn.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--30967 (AFn.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (AFn.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--30967 (AFn.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (AFn.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--30967 (AFn.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (AFn.java:87):
; When both bases are negative, nil is returned
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--30967 (AFn.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (AFn.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--30967 (AFn.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-first-base-is-negative (AFn.java:79):
; Negative input base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--30967 (AFn.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (AFn.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--30967 (AFn.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (AFn.java:59):
; Invalid digits return nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--30967 (AFn.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (AFn.java:51):
; Leading zeroes don't affect conversion
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--30967 (AFn.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (AFn.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--30967 (AFn.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (AFn.java:55):
; Negative digits result in nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--30967 (AFn.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (AFn.java:83):
; Negative output base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--30967 (AFn.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (AFn.java:67):
; Output base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--30967 (AFn.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (AFn.java:75):
; Output base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--30967 (AFn.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (AFn.java:7):
; Base 2 '1' converts to base 10 '1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--30967 (AFn.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (AFn.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--30967 (AFn.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (AFn.java:43):
; 0 converts to 0, no matter the base
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--30967 (AFn.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (AFn.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--30967 (AFn.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 18, failures: 2, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (AFn.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31022 (AFn.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (AFn.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31022 (AFn.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (AFn.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31022 (AFn.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (AFn.java:87):
; When both bases are negative, nil is returned
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31022 (AFn.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (AFn.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31022 (AFn.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-first-base-is-negative (AFn.java:79):
; Negative input base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31022 (AFn.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (AFn.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31022 (AFn.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (AFn.java:59):
; Invalid digits return nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31022 (AFn.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (AFn.java:51):
; Leading zeroes don't affect conversion
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31022 (AFn.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (AFn.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31022 (AFn.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (AFn.java:55):
; Negative digits result in nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31022 (AFn.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (AFn.java:83):
; Negative output base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31022 (AFn.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (AFn.java:67):
; Output base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31022 (AFn.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (AFn.java:75):
; Output base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31022 (AFn.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (AFn.java:7):
; Base 2 '1' converts to base 10 '1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31022 (AFn.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (AFn.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31022 (AFn.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (AFn.java:43):
; 0 converts to 0, no matter the base
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31022 (AFn.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (AFn.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31022 (AFn.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 18, failures: 2, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error macroexpanding clojure.core/defn at (all_your_base.clj:8:1).
; num - failed: vector? at: [:fn-tail :arity-1 :params] spec: :clojure.core.specs.alpha/param-list
num - failed: (or (nil? %) (sequential? %)) at: [:fn-tail :arity-n :bodies] spec: :clojure.core.specs.alpha/params+body
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (AFn.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31094 (AFn.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (AFn.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31094 (AFn.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (AFn.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31094 (AFn.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (AFn.java:87):
; When both bases are negative, nil is returned
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31094 (AFn.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (AFn.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31094 (AFn.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-first-base-is-negative (AFn.java:79):
; Negative input base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31094 (AFn.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (AFn.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31094 (AFn.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (AFn.java:59):
; Invalid digits return nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31094 (AFn.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (AFn.java:51):
; Leading zeroes don't affect conversion
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31094 (AFn.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (AFn.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31094 (AFn.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (AFn.java:55):
; Negative digits result in nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31094 (AFn.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (AFn.java:83):
; Negative output base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31094 (AFn.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (AFn.java:67):
; Output base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31094 (AFn.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (AFn.java:75):
; Output base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31094 (AFn.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (AFn.java:7):
; Base 2 '1' converts to base 10 '1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31094 (AFn.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (AFn.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31094 (AFn.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (AFn.java:43):
; 0 converts to 0, no matter the base
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31094 (AFn.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (AFn.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31094 (AFn.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 18, failures: 2, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (AFn.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31150 (AFn.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (AFn.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31150 (AFn.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (AFn.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31150 (AFn.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (AFn.java:87):
; When both bases are negative, nil is returned
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31150 (AFn.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (AFn.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31150 (AFn.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-first-base-is-negative (AFn.java:79):
; Negative input base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31150 (AFn.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (AFn.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31150 (AFn.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (AFn.java:59):
; Invalid digits return nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31150 (AFn.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (AFn.java:51):
; Leading zeroes don't affect conversion
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31150 (AFn.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (AFn.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31150 (AFn.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (AFn.java:55):
; Negative digits result in nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31150 (AFn.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (AFn.java:83):
; Negative output base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31150 (AFn.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (AFn.java:67):
; Output base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31150 (AFn.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (AFn.java:75):
; Output base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31150 (AFn.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (AFn.java:7):
; Base 2 '1' converts to base 10 '1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31150 (AFn.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (AFn.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31150 (AFn.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (AFn.java:43):
; 0 converts to 0, no matter the base
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31150 (AFn.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (AFn.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31150 (AFn.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 18, failures: 2, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (AFn.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31206 (AFn.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (AFn.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31206 (AFn.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (AFn.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31206 (AFn.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (AFn.java:87):
; When both bases are negative, nil is returned
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31206 (AFn.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (AFn.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31206 (AFn.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-first-base-is-negative (AFn.java:79):
; Negative input base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31206 (AFn.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (AFn.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31206 (AFn.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (AFn.java:59):
; Invalid digits return nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31206 (AFn.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (AFn.java:51):
; Leading zeroes don't affect conversion
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31206 (AFn.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (AFn.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31206 (AFn.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (AFn.java:55):
; Negative digits result in nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31206 (AFn.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (AFn.java:83):
; Negative output base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31206 (AFn.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (AFn.java:67):
; Output base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31206 (AFn.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (AFn.java:75):
; Output base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31206 (AFn.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (AFn.java:7):
; Base 2 '1' converts to base 10 '1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31206 (AFn.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (AFn.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31206 (AFn.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (AFn.java:43):
; 0 converts to 0, no matter the base
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31206 (AFn.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (AFn.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31206 (AFn.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 18, failures: 2, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:9:3).
; Unable to resolve symbol: div in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (AFn.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31278 (AFn.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (AFn.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31278 (AFn.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (AFn.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31278 (AFn.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (AFn.java:87):
; When both bases are negative, nil is returned
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31278 (AFn.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (AFn.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31278 (AFn.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-first-base-is-negative (AFn.java:79):
; Negative input base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31278 (AFn.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (AFn.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31278 (AFn.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (AFn.java:59):
; Invalid digits return nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31278 (AFn.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (AFn.java:51):
; Leading zeroes don't affect conversion
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31278 (AFn.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (AFn.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31278 (AFn.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (AFn.java:55):
; Negative digits result in nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31278 (AFn.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (AFn.java:83):
; Negative output base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31278 (AFn.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (AFn.java:67):
; Output base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31278 (AFn.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (AFn.java:75):
; Output base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31278 (AFn.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (AFn.java:7):
; Base 2 '1' converts to base 10 '1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31278 (AFn.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (AFn.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31278 (AFn.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (AFn.java:43):
; 0 converts to 0, no matter the base
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31278 (AFn.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (AFn.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31278 (AFn.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 18, failures: 2, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling rem at (all_your_base.clj:9:3).
; Wrong number of args (0) passed to: clojure.core/rem--inliner--5611
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling rem at (all_your_base.clj:9:3).
; Wrong number of args (0) passed to: clojure.core/rem--inliner--5611
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (AFn.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31366 (AFn.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (AFn.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31366 (AFn.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (AFn.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31366 (AFn.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (AFn.java:87):
; When both bases are negative, nil is returned
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31366 (AFn.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (AFn.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31366 (AFn.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-first-base-is-negative (AFn.java:79):
; Negative input base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31366 (AFn.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (AFn.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31366 (AFn.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (AFn.java:59):
; Invalid digits return nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31366 (AFn.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (AFn.java:51):
; Leading zeroes don't affect conversion
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31366 (AFn.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (AFn.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31366 (AFn.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (AFn.java:55):
; Negative digits result in nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31366 (AFn.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (AFn.java:83):
; Negative output base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31366 (AFn.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (AFn.java:67):
; Output base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31366 (AFn.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (AFn.java:75):
; Output base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31366 (AFn.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (AFn.java:7):
; Base 2 '1' converts to base 10 '1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31366 (AFn.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (AFn.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31366 (AFn.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (AFn.java:43):
; 0 converts to 0, no matter the base
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31366 (AFn.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (AFn.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31366 (AFn.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 18, failures: 2, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (0) passed to: all-your-base/convertToBase
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (0) passed to: all-your-base/convertToBase
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
0
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (AFn.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31464 (AFn.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (AFn.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31464 (AFn.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (AFn.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31464 (AFn.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (AFn.java:87):
; When both bases are negative, nil is returned
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31464 (AFn.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (AFn.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31464 (AFn.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-first-base-is-negative (AFn.java:79):
; Negative input base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31464 (AFn.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (AFn.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31464 (AFn.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (AFn.java:59):
; Invalid digits return nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31464 (AFn.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (AFn.java:51):
; Leading zeroes don't affect conversion
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31464 (AFn.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (AFn.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31464 (AFn.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (AFn.java:55):
; Negative digits result in nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31464 (AFn.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (AFn.java:83):
; Negative output base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31464 (AFn.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (AFn.java:67):
; Output base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31464 (AFn.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (AFn.java:75):
; Output base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31464 (AFn.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (AFn.java:7):
; Base 2 '1' converts to base 10 '1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31464 (AFn.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (AFn.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31464 (AFn.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (AFn.java:43):
; 0 converts to 0, no matter the base
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31464 (AFn.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (AFn.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31464 (AFn.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 18, failures: 2, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (AFn.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31522 (AFn.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (AFn.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31522 (AFn.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (AFn.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31522 (AFn.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (AFn.java:87):
; When both bases are negative, nil is returned
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31522 (AFn.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (AFn.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31522 (AFn.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-first-base-is-negative (AFn.java:79):
; Negative input base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31522 (AFn.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (AFn.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31522 (AFn.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (AFn.java:59):
; Invalid digits return nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31522 (AFn.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (AFn.java:51):
; Leading zeroes don't affect conversion
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31522 (AFn.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (AFn.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31522 (AFn.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (AFn.java:55):
; Negative digits result in nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31522 (AFn.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (AFn.java:83):
; Negative output base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31522 (AFn.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (AFn.java:67):
; Output base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31522 (AFn.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (AFn.java:75):
; Output base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31522 (AFn.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (AFn.java:7):
; Base 2 '1' converts to base 10 '1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31522 (AFn.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (AFn.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31522 (AFn.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (AFn.java:43):
; 0 converts to 0, no matter the base
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31522 (AFn.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (AFn.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31522 (AFn.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 18, failures: 2, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (0) passed to: clojure.core/cons--5361
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (1) passed to: clojure.core/cons--5361
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (1) passed to: clojure.core/cons--5361
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (1) passed to: clojure.core/cons--5361
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (1) passed to: clojure.core/cons--5361
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:9:3).
; Unable to resolve symbol: conver in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (0) passed to: all-your-base/convertToBase
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (0) passed to: clojure.core//
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:11:1).
; Wrong number of args (1) passed to: all-your-base/convertToBase
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling at (all_your_base.clj:11:1).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (StackOverflowError) at java.math.MutableBigInteger/divideOneWord (MutableBigInteger.java:1105).
; null
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:9:39).
; Unable to resolve symbol: unch in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling at (all_your_base.clj:11:1).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling at (all_your_base.clj:11:1).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (StackOverflowError) at all-your-base/convertToBase (all_your_base.clj:9).
; null
clj꞉all-your-base꞉> 
#'all-your-base/convertToBase
clj꞉all-your-base꞉> 
QUIT
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling at (all_your_base.clj:12:1).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling if at (all_your_base.clj:9:3).
; Too few arguments to if
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling if at (all_your_base.clj:9:3).
; Too few arguments to if
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling if at (all_your_base.clj:9:3).
; Too few arguments to if
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling if at (all_your_base.clj:9:3).
; Too few arguments to if
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling if at (all_your_base.clj:9:3).
; Too few arguments to if
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling at (all_your_base.clj:12:1).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling at (all_your_base.clj:13:1).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (AFn.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31968 (AFn.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (AFn.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31968 (AFn.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (AFn.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31968 (AFn.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (AFn.java:87):
; When both bases are negative, nil is returned
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31968 (AFn.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (AFn.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31968 (AFn.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-first-base-is-negative (AFn.java:79):
; Negative input base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31968 (AFn.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (AFn.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31968 (AFn.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (AFn.java:59):
; Invalid digits return nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31968 (AFn.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (AFn.java:51):
; Leading zeroes don't affect conversion
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31968 (AFn.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (AFn.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31968 (AFn.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (AFn.java:55):
; Negative digits result in nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31968 (AFn.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (AFn.java:83):
; Negative output base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31968 (AFn.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (AFn.java:67):
; Output base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31968 (AFn.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (AFn.java:75):
; Output base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31968 (AFn.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (AFn.java:7):
; Base 2 '1' converts to base 10 '1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31968 (AFn.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (AFn.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31968 (AFn.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (AFn.java:43):
; 0 converts to 0, no matter the base
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31968 (AFn.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (AFn.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--31968 (AFn.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 18, failures: 2, ns: 1, vars: 21
clj꞉all-your-base꞉> 
(0 1 0 1)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (AFn.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32028 (AFn.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (AFn.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32028 (AFn.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (AFn.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32028 (AFn.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (AFn.java:87):
; When both bases are negative, nil is returned
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32028 (AFn.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (AFn.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32028 (AFn.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-first-base-is-negative (AFn.java:79):
; Negative input base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32028 (AFn.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (AFn.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32028 (AFn.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (AFn.java:59):
; Invalid digits return nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32028 (AFn.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (AFn.java:51):
; Leading zeroes don't affect conversion
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32028 (AFn.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (AFn.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32028 (AFn.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (AFn.java:55):
; Negative digits result in nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32028 (AFn.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (AFn.java:83):
; Negative output base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32028 (AFn.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (AFn.java:67):
; Output base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32028 (AFn.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (AFn.java:75):
; Output base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32028 (AFn.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (AFn.java:7):
; Base 2 '1' converts to base 10 '1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32028 (AFn.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (AFn.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32028 (AFn.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (AFn.java:43):
; 0 converts to 0, no matter the base
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32028 (AFn.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (AFn.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32028 (AFn.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 18, failures: 2, ns: 1, vars: 21
clj꞉all-your-base꞉> 
(0 1 0 1)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (AFn.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (AFn.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (AFn.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (AFn.java:87):
; When both bases are negative, nil is returned
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (AFn.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-first-base-is-negative (AFn.java:79):
; Negative input base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (AFn.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (AFn.java:59):
; Invalid digits return nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (AFn.java:51):
; Leading zeroes don't affect conversion
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (AFn.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (AFn.java:55):
; Negative digits result in nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (AFn.java:83):
; Negative output base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (AFn.java:67):
; Output base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (AFn.java:75):
; Output base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (AFn.java:7):
; Base 2 '1' converts to base 10 '1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (AFn.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (AFn.java:43):
; 0 converts to 0, no matter the base
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (AFn.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 18, failures: 2, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Error printing return value (ArityException) at clojure.lang.AFn/throwArity (AFn.java:429).
; Wrong number of args (1) passed to: all-your-base/convertToBase
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (RT.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (RT.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (RT.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (RT.java:87):
; When both bases are negative, nil is returned
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (RT.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-empty-list (RT.java:39):
; Empty input digits returns empty sequence
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:39)
; expected:
(empty? (all-your-base/convert 2 () 10))
; ERROR in all-your-base-test/test-first-base-is-negative (RT.java:79):
; Negative input base returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; ERROR in all-your-base-test/test-first-base-is-one (RT.java:63):
; Input base of 1 returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:63)
; expected:
(nil? (all-your-base/convert 1 () 10))
; ERROR in all-your-base-test/test-first-base-is-zero (RT.java:71):
; Input base of 0 returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:71)
; expected:
(nil? (all-your-base/convert 0 () 10))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (RT.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (RT.java:59):
; Invalid digits return nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (RT.java:51):
; Leading zeroes don't affect conversion
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (RT.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (RT.java:55):
; Negative digits result in nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (RT.java:83):
; Negative output base returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (RT.java:67):
; Output base of 1 returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (RT.java:75):
; Output base of 0 returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (RT.java:7):
; Base 2 '1' converts to base 10 '1'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (RT.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (RT.java:43):
; 0 converts to 0, no matter the base
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (RT.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 21, failures: 0, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (RT.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (RT.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (RT.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (RT.java:87):
; When both bases are negative, nil is returned
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (RT.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-empty-list (RT.java:39):
; Empty input digits returns empty sequence
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:39)
; expected:
(empty? (all-your-base/convert 2 () 10))
; ERROR in all-your-base-test/test-first-base-is-negative (RT.java:79):
; Negative input base returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; ERROR in all-your-base-test/test-first-base-is-one (RT.java:63):
; Input base of 1 returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:63)
; expected:
(nil? (all-your-base/convert 1 () 10))
; ERROR in all-your-base-test/test-first-base-is-zero (RT.java:71):
; Input base of 0 returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:71)
; expected:
(nil? (all-your-base/convert 0 () 10))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (RT.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (RT.java:59):
; Invalid digits return nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (RT.java:51):
; Leading zeroes don't affect conversion
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (RT.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (RT.java:55):
; Negative digits result in nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (RT.java:83):
; Negative output base returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (RT.java:67):
; Output base of 1 returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (RT.java:75):
; Output base of 0 returns nil
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (RT.java:7):
; Base 2 '1' converts to base 10 '1'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (RT.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (RT.java:43):
; 0 converts to 0, no matter the base
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (RT.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: java.lang.IllegalArgumentException: Don't know how to create ISeq from: all_your_base$convertToBase (RT.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 21, failures: 0, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (AFn.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32260 (AFn.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (AFn.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32260 (AFn.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (AFn.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32260 (AFn.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (AFn.java:87):
; When both bases are negative, nil is returned
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32260 (AFn.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (AFn.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32260 (AFn.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-first-base-is-negative (AFn.java:79):
; Negative input base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32260 (AFn.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (AFn.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32260 (AFn.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (AFn.java:59):
; Invalid digits return nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32260 (AFn.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (AFn.java:51):
; Leading zeroes don't affect conversion
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32260 (AFn.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (AFn.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32260 (AFn.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (AFn.java:55):
; Negative digits result in nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32260 (AFn.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (AFn.java:83):
; Negative output base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32260 (AFn.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (AFn.java:67):
; Output base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32260 (AFn.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (AFn.java:75):
; Output base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32260 (AFn.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (AFn.java:7):
; Base 2 '1' converts to base 10 '1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32260 (AFn.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (AFn.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32260 (AFn.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (AFn.java:43):
; 0 converts to 0, no matter the base
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32260 (AFn.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (AFn.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convert/fn--32260 (AFn.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 18, failures: 2, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (AFn.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (AFn.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (AFn.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (AFn.java:87):
; When both bases are negative, nil is returned
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (AFn.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-first-base-is-negative (AFn.java:79):
; Negative input base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (AFn.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (AFn.java:59):
; Invalid digits return nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (AFn.java:51):
; Leading zeroes don't affect conversion
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (AFn.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (AFn.java:55):
; Negative digits result in nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (AFn.java:83):
; Negative output base returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (AFn.java:67):
; Output base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (AFn.java:75):
; Output base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (AFn.java:7):
; Base 2 '1' converts to base 10 '1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (AFn.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (AFn.java:43):
; 0 converts to 0, no matter the base
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (AFn.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: all-your-base/convertToBase (AFn.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 18, failures: 2, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
((60) (9 61) (49 21 5))
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(nil (2) nil (8) nil (2 3))
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
((1) nil (4))
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? ((1))))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
((0 1) (0 0 0 1 0 1))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? ((1))))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
((1 0 1) (2 1 0 1))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (nil (2) nil (8) (2 3) (2 3))))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(nil (2 4) nil)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(nil nil nil)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (nil (2) nil (8) (-6 -1) (2 3))))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? ((1))))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
((1))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
((1 0 1))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
(nil)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(nil (6) (9) (11 1))
; 21 tests finished, problems found. 😭 errors: 2, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
((0 0 1) (0 0 0 1 1) (0 0 0 0 0 0 0 1))
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:18:1).
; Wrong number of args (2) passed to: all-your-base/convert
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
((60) (9 61) (49 21 5))
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(nil (2) nil (8) nil (2 3))
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
((1) nil (4))
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? ((1))))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
((0 1) (0 0 0 1 0 1))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? ((1))))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
((1 0 1) (2 1 0 1))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (nil (2) nil (8) (2 3) (2 3))))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(nil (2 4) nil)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(nil nil nil)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (nil (2) nil (8) (-6 -1) (2 3))))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? ((1))))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
((1))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
((1 0 1))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
(nil)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(nil (6) (9) (11 1))
; 21 tests finished, problems found. 😭 errors: 2, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
((60) (9 61) (49 21 5))
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(nil (2) nil (8) nil (2 3))
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
((1) nil (4))
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? ((1))))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
((0 1) (0 0 0 1 0 1))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? ((1))))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
((1 0 1) (2 1 0 1))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (nil (2) nil (8) (2 3) (2 3))))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(nil (2 4) nil)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(nil nil nil)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (nil (2) nil (8) (-6 -1) (2 3))))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? ((1))))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
((1))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
((1 0 1))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
(nil)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(nil (6) (9) (11 1))
; 21 tests finished, problems found. 😭 errors: 2, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
((0 0 1) (0 1 0 1))
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
()
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
()
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
()
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
()
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
()
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
()
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
()
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
()
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 0, failures: 20, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:18:1).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IFn (clojure.lang.LazySeq and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
((49 21 5) (9 61) (60))
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
((2 3) nil (8) nil (2) nil)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
((4) nil (1))
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? ((1))))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
((0 0 0 1 0 1) (0 1))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? ((1))))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
((2 1 0 1) (1 0 1))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? ((2 3) (2 3) (8) nil (2) nil)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(nil (2 4) nil)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(nil nil nil)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? ((2 3) (-6 -1) (8) nil (2) nil)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? ((1))))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
((1))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
((1 0 1))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
(nil)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
((11 1) (9) (6) nil)
; 21 tests finished, problems found. 😭 errors: 2, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:18:1).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IFn (clojure.lang.LazySeq and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:18:1).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IFn (clojure.lang.LazySeq and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:18:1).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IFn (clojure.lang.LazySeq and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:18:1).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IFn (clojure.lang.LazySeq and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (ClassCastException) at all-your-base/convert (all_your_base.clj:17).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IFn (clojure.lang.LazySeq and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:18:1).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IFn (clojure.lang.LazySeq and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (ClassCastException) at all-your-base/convert (all_your_base.clj:17).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IFn (clojure.lang.LazySeq and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:18:1).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IFn (clojure.lang.LazySeq and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:18:1).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IFn (clojure.lang.LazySeq and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (ClassCastException) at all-your-base/convert (all_your_base.clj:17).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IFn (clojure.lang.LazySeq and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉all-your-base꞉> 
; Execution error (ClassCastException) at all-your-base/convert (form-init13942491984121570974.clj:17).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IFn (clojure.lang.LazySeq and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:18:1).
; Wrong number of args (2) passed to: all-your-base/convert
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
((60) (9 61) (49 21 5))
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(nil (2) nil (8) nil (2 3))
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
((1) nil (4))
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? ((1))))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
((0 1) (0 0 0 1 0 1))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? ((1))))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
((1 0 1) (2 1 0 1))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (nil (2) nil (8) (2 3) (2 3))))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(nil (2 4) nil)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(nil nil nil)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (nil (2) nil (8) (-6 -1) (2 3))))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? ((1))))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
((1))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
((1 0 1))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
(nil)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(nil (6) (9) (11 1))
; 21 tests finished, problems found. 😭 errors: 2, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
((0 0 1) (0 1 1 1 1) (0 0 0 1 0 0 1 1))
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
((60) (9 61) (49 21 5))
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(nil (2) nil (8) nil (2 3))
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
((1) nil (4))
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? ((1))))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
((0 1) (0 0 0 1 0 1))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? ((1))))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
((1 0 1) (2 1 0 1))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (nil (2) nil (8) (2 3) (2 3))))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(nil (2 4) nil)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(nil nil nil)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (nil (2) nil (8) (-6 -1) (2 3))))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? ((1))))
; ERROR in all-your-base-test/test-second-base-is-one (RT.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
((1))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
((1 0 1))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
(nil)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(nil (6) (9) (11 1))
; 21 tests finished, problems found. 😭 errors: 2, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
((0 0 1) (0 1 0 1))
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
((60) (9 61) (49 21 5))
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(nil (2) nil (8) nil (2 3))
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
((1) nil (4))
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? ((1))))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
((0 1) (0 0 0 1 0 1))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? ((1))))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
((1 0 1) (2 1 0 1))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (nil (2) nil (8) (2 3) (2 3))))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(nil (2 4) nil)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(nil nil nil)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (nil (2) nil (8) (-6 -1) (2 3))))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? ((1))))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
((1))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
((1 0 1))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
(nil)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(nil (6) (9) (11 1))
; 21 tests finished, problems found. 😭 errors: 2, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
(nil (0 1 0 1))
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
((60) (9 61) (49 21 5))
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(nil (2) nil (8) nil (2 3))
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
((1) nil (4))
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? ((1))))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
((0 1) (0 0 0 1 0 1))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? ((1))))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
((1 0 1) (2 1 0 1))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (nil (2) nil (8) (2 3) (2 3))))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(nil (2 4) nil)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(nil nil nil)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (nil (2) nil (8) (-6 -1) (2 3))))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? ((1))))
; ERROR in all-your-base-test/test-second-base-is-one (RT.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
((1))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
((1 0 1))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
(nil)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(nil (6) (9) (11 1))
; 21 tests finished, problems found. 😭 errors: 2, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
((0 1) (0 1 0 1))
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:18:1).
; class clojure.lang.LazySeq cannot be cast to class java.lang.Number (clojure.lang.LazySeq is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(60 4462 28227)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(0 2 0 8 0 32)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(1 0 4)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(2 40)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(10 32)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (0 2 0 8 32 32)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 42 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (0 2 0 8 -16 32)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? (0 2 0 8 0 32)))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? (7)))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(5)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(0 6 9 27)
; 21 tests finished, problems found. 😭 errors: 0, failures: 18, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:17:5).
; Unable to resolve symbol: % in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:18:1).
; Wrong number of args (1) passed to: all-your-base/convertToBase
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(60 4462 28227)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(0 2 0 8 0 32)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(1 0 4)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(2 40)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(10 32)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (0 2 0 8 32 32)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 42 0)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
(0 0 0)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (0 2 0 8 -16 32)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (RT.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(5)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(0 6 9 27)
; 21 tests finished, problems found. 😭 errors: 2, failures: 16, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(45 10 6)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(2 4)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(0 1 0 1 0 1)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(0 2 1 1)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (4 7)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(2 4)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
nil
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (6 2)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
nil
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(10 2)
; 21 tests finished, problems found. 😭 errors: 2, failures: 13, ns: 1, vars: 21
clj꞉all-your-base꞉> 
(0 0 1 1)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:11:5).
; Unable to resolve symbol: con in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:12:1).
; class java.lang.Long cannot be cast to class clojure.lang.IPersistentCollection (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IPersistentCollection is in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling at (all_your_base.clj:11:5).
; Unable to resolve symbol: con in this context
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(45 10 6)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(2 4)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(0 1 0 1 0 1)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(0 2 1 1)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (4 7)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(2 4)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
nil
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (6 2)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
nil
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(10 2)
; 21 tests finished, problems found. 😭 errors: 2, failures: 13, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:18:1).
; Wrong number of args (0) passed to: all-your-base/convertToBase
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:18:1).
; Wrong number of args (0) passed to: all-your-base/convertToBase
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (ArityException) at all-your-base/convert (all_your_base.clj:17).
; Wrong number of args (0) passed to: all-your-base/convertToBase
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; ERROR in all-your-base-test/test-15-bit-integer (AFn.java:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:35)
; expected:
(= '(6 10 45) (all-your-base/convert 97 '(3 46 60) 73))
; ERROR in all-your-base-test/test-binary-to-multiple-decimal (AFn.java:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:19)
; expected:
(= '(4 2) (all-your-base/convert 2 '(1 0 1 0 1 0) 10))
; ERROR in all-your-base-test/test-binary-to-single-decimal (AFn.java:11):
; Base 2 '1 0 1' converts to base 10 '5'
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:11)
; expected:
(= '(5) (all-your-base/convert 2 '(1 0 1) 10))
; ERROR in all-your-base-test/test-both-bases-are-negative (AFn.java:87):
; When both bases are negative, nil is returned
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:87)
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; ERROR in all-your-base-test/test-decimal-to-binary (AFn.java:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:23)
; expected:
(= '(1 0 1 0 1 0) (all-your-base/convert 10 '(4 2) 2))
; ERROR in all-your-base-test/test-empty-list (AFn.java:39):
; Empty input digits returns empty sequence
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:39)
; expected:
(empty? (all-your-base/convert 2 () 10))
; ERROR in all-your-base-test/test-first-base-is-negative (AFn.java:79):
; Negative input base returns nil
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:79)
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; ERROR in all-your-base-test/test-first-base-is-one (AFn.java:63):
; Input base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:63)
; expected:
(nil? (all-your-base/convert 1 () 10))
; ERROR in all-your-base-test/test-first-base-is-zero (AFn.java:71):
; Input base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:71)
; expected:
(nil? (all-your-base/convert 0 () 10))
; ERROR in all-your-base-test/test-hexadecimal-to-trinary (AFn.java:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:31)
; expected:
(= '(1 1 2 0) (all-your-base/convert 16 '(2 10) 3))
; ERROR in all-your-base-test/test-invalid-positive-digit (AFn.java:59):
; Invalid digits return nil
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:59)
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; ERROR in all-your-base-test/test-leading-zeros (AFn.java:51):
; Leading zeroes don't affect conversion
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:51)
; expected:
(= '(4 2) (all-your-base/convert 7 '(0 6 0) 10))
; ERROR in all-your-base-test/test-multiple-zeroes (AFn.java:47):
; 0 converts to 0, no matter the how many zeroes
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:47)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; ERROR in all-your-base-test/test-negative-digit (AFn.java:55):
; Negative digits result in nil
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:55)
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; ERROR in all-your-base-test/test-second-base-is-negative (AFn.java:83):
; Negative output base returns nil
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:83)
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; ERROR in all-your-base-test/test-second-base-is-one (AFn.java:67):
; Output base of 1 returns nil
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:67)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (AFn.java:75):
; Output base of 0 returns nil
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; ERROR in all-your-base-test/test-single-bit-to-one-decimal (AFn.java:7):
; Base 2 '1' converts to base 10 '1'
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:7)
; expected:
(= '(1) (all-your-base/convert 2 '(1) 10))
; ERROR in all-your-base-test/test-single-decimal-to-binary (AFn.java:15):
; Base 10 '5' converts to base 2 '1 0 1'
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:15)
; expected:
(= '(1 0 1) (all-your-base/convert 10 '(5) 2))
; ERROR in all-your-base-test/test-single-zero (AFn.java:43):
; 0 converts to 0, no matter the base
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:43)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; ERROR in all-your-base-test/test-trinary-to-hexadecimal (AFn.java:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; error: clojure.lang.ArityException: Wrong number of args (0) passed to: all-your-base/convertToBase (AFn.java:27)
; expected:
(= '(2 10) (all-your-base/convert 3 '(1 1 2 0) 16))
; 21 tests finished, problems found. 😭 errors: 21, failures: 0, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(45 10 6)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(2 4)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(0 1 0 1 0 1)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(0 2 1 1)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (4 7)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(2 4)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
nil
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (6 2)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
nil
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(10 2)
; 21 tests finished, problems found. 😭 errors: 2, failures: 13, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(45 10 6)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(2 4)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(0 1 0 1 0 1)
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(0 2 1 1)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (4 7)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(2 4)
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
nil
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (6 2)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
nil
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(10 2)
; 21 tests finished, problems found. 😭 errors: 2, failures: 13, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ClassCastException) compiling at (all_your_base.clj:18:1).
; class clojure.lang.Cons cannot be cast to class clojure.lang.IFn (clojure.lang.Cons and clojure.lang.IFn are in unnamed module of loader 'app')
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (7 4)))
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (2 6)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (RT.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 2, failures: 9, ns: 1, vars: 21
clj꞉all-your-base꞉> 
(1 1 0 0)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
()
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
()
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
()
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
()
; ERROR in all-your-base-test/test-empty-list (Numbers.java):
; Empty input digits returns empty sequence
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(empty? (all-your-base/convert 2 () 10))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? ()))
; ERROR in all-your-base-test/test-first-base-is-one (Numbers.java):
; Input base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 1 () 10))
; ERROR in all-your-base-test/test-first-base-is-zero (Numbers.java):
; Input base of 0 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 0 () 10))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
()
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
()
; ERROR in all-your-base-test/test-multiple-zeroes (Util.java):
; 0 converts to 0, no matter the how many zeroes
; error: java.lang.StackOverflowError (Util.java)
; expected:
(= '(0) (all-your-base/convert 10 '(0 0 0) 2))
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-one (all_your_base_test.clj:67):
; Output base of 1 returns nil
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-second-base-is-zero (all_your_base_test.clj:75):
; Output base of 0 returns nil
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
()
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
()
; ERROR in all-your-base-test/test-single-zero (Util.java):
; 0 converts to 0, no matter the base
; error: java.lang.StackOverflowError (Util.java)
; expected:
(= '(0) (all-your-base/convert 10 '(0) 2))
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 5, failures: 16, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (7 4)))
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (2 6)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (RT.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 2, failures: 9, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-15-bit-integer (all_your_base_test.clj:35):
; Base 97 '3 46 60' converts to base 73 '6 10 45'
; expected:
(6 10 45)
; actual:
(0 6 10 45)
; FAIL in all-your-base-test/test-binary-to-multiple-decimal (all_your_base_test.clj:19):
; Base 2 '1 0 1 0 1 0' converts to base 10 '4 2'
; expected:
(4 2)
; actual:
(0 4 2)
; FAIL in all-your-base-test/test-binary-to-single-decimal (all_your_base_test.clj:11):
; Base 2 '1 0 1' converts to base 10 '5'
; expected:
(5)
; actual:
(0 5)
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (0 1)))
; FAIL in all-your-base-test/test-decimal-to-binary (all_your_base_test.clj:23):
; Base 10 '4 2' conves to base 2 '1 0 1 0 1 0'
; expected:
(1 0 1 0 1 0)
; actual:
(0 1 0 1 0 1 0)
; FAIL in all-your-base-test/test-empty-list (all_your_base_test.clj:39):
; Empty input digits returns empty sequence
; expected:
(empty? (all-your-base/convert 2 () 10))
; actual:
(not (empty? (0)))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (0 1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? (0)))
; FAIL in all-your-base-test/test-hexadecimal-to-trinary (all_your_base_test.clj:31):
; Base 16 '2 10' converts to base 3 '1 1 2 0'
; expected:
(1 1 2 0)
; actual:
(0 1 1 2 0)
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (0 7 4)))
; FAIL in all-your-base-test/test-leading-zeros (all_your_base_test.clj:51):
; Leading zeroes don't affect conversion
; expected:
(4 2)
; actual:
(0 4 2)
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (0 2 6)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (0 1)))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-bit-to-one-decimal (all_your_base_test.clj:7):
; Base 2 '1' converts to base 10 '1'
; expected:
(1)
; actual:
(0 1)
; FAIL in all-your-base-test/test-single-decimal-to-binary (all_your_base_test.clj:15):
; Base 10 '5' converts to base 2 '1 0 1'
; expected:
(1 0 1)
; actual:
(0 1 0 1)
; FAIL in all-your-base-test/test-trinary-to-hexadecimal (all_your_base_test.clj:27):
; Base 3 '1 1 2 0' converts to base 16 '2 10'
; expected:
(2 10)
; actual:
(0 2 10)
; 21 tests finished, problems found. 😭 errors: 2, failures: 17, ns: 1, vars: 21
clj꞉all-your-base꞉> 
(0 1 1 0 0)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (7 4)))
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (2 6)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 2, failures: 9, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (7 4)))
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (2 6)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (RT.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 2, failures: 9, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error compiling if at (all_your_base.clj:14:3).
; Too few arguments to if
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling if at (all_your_base.clj:14:3).
; Too few arguments to if
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling if at (all_your_base.clj:14:3).
; Too few arguments to if
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error compiling if at (all_your_base.clj:14:3).
; Too few arguments to if
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (7 4)))
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (2 6)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 2, failures: 9, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (7 4)))
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (2 6)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (RT.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (RT.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 2, failures: 9, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (7 4)))
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (2 6)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 2, failures: 9, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (7 4)))
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (2 6)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 2, failures: 9, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (7 4)))
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (2 6)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (Util.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Util.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 2, failures: 9, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (7 4)))
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (2 6)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 2, failures: 9, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (7 4)))
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (2 6)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; 21 tests finished, problems found. 😭 errors: 2, failures: 8, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (7 4)))
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (2 6)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; 21 tests finished, problems found. 😭 errors: 2, failures: 8, ns: 1, vars: 21
clj꞉all-your-base꞉> 
(1 1 0 0)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (7 4)))
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (2 6)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 2, failures: 9, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
nil
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (7 4)))
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (2 6)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 2, failures: 9, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
(1 1 0 0)
; Running tests for all-your-base...
; FAIL in all-your-base-test/test-both-bases-are-negative (all_your_base_test.clj:87):
; When both bases are negative, nil is returned
; expected:
(nil? (all-your-base/convert -2 '(1) -7))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-negative (all_your_base_test.clj:79):
; Negative input base returns nil
; expected:
(nil? (all-your-base/convert -2 '(1) 10))
; actual:
(not (nil? (1)))
; FAIL in all-your-base-test/test-first-base-is-one (all_your_base_test.clj:63):
; Input base of 1 returns nil
; expected:
(nil? (all-your-base/convert 1 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-first-base-is-zero (all_your_base_test.clj:71):
; Input base of 0 returns nil
; expected:
(nil? (all-your-base/convert 0 () 10))
; actual:
(not (nil? ()))
; FAIL in all-your-base-test/test-invalid-positive-digit (all_your_base_test.clj:59):
; Invalid digits return nil
; expected:
(nil? (all-your-base/convert 2 '(1 2 1 0 1 0) 10))
; actual:
(not (nil? (7 4)))
; FAIL in all-your-base-test/test-multiple-zeroes (all_your_base_test.clj:47):
; 0 converts to 0, no matter the how many zeroes
; expected:
(0)
; actual:
()
; FAIL in all-your-base-test/test-negative-digit (all_your_base_test.clj:55):
; Negative digits result in nil
; expected:
(nil? (all-your-base/convert 2 '(1 -1 1 0 1 0) 10))
; actual:
(not (nil? (2 6)))
; FAIL in all-your-base-test/test-second-base-is-negative (all_your_base_test.clj:83):
; Negative output base returns nil
; expected:
(nil? (all-your-base/convert 2 '(1) -7))
; actual:
(not (nil? (1)))
; ERROR in all-your-base-test/test-second-base-is-one (Numbers.java):
; Output base of 1 returns nil
; error: java.lang.StackOverflowError (Numbers.java)
; expected:
(nil? (all-your-base/convert 2 '(1 0 1 0 1 0) 1))
; ERROR in all-your-base-test/test-second-base-is-zero (Numbers.java:75):
; Output base of 0 returns nil
; error: java.lang.ArithmeticException: Divide by zero (Numbers.java:75)
; expected:
(nil? (all-your-base/convert 10 '(7) 0))
; FAIL in all-your-base-test/test-single-zero (all_your_base_test.clj:43):
; 0 converts to 0, no matter the base
; expected:
(0)
; actual:
()
; 21 tests finished, problems found. 😭 errors: 2, failures: 9, ns: 1, vars: 21
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:15:9).
; Wrong number of args (3) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:15:9).
; Wrong number of args (3) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:15:9).
; Wrong number of args (3) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:15:9).
; Wrong number of args (3) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:15:9).
; Wrong number of args (3) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:15:9).
; Wrong number of args (3) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:15:9).
; Wrong number of args (3) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:15:9).
; Wrong number of args (3) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:15:9).
; Wrong number of args (3) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:15:9).
; Wrong number of args (3) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:15:9).
; Wrong number of args (3) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling . at (all_your_base.clj:15:9).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling . at (all_your_base.clj:15:9).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling . at (all_your_base.clj:15:9).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
(1 1 0 0)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling . at (all_your_base.clj:15:9).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
(1 0 0)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error reading source at (all_your_base.clj:18:0).
; No dispatch macro for: b
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
(1 0 0)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error reading source at (all_your_base.clj:18:0).
; No dispatch macro for: b
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
(1 0 0)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error reading source at (all_your_base.clj:18:0).
; No dispatch macro for: b
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Syntax error reading source at (REPL:19:0).
; No dispatch macro for: b
clj꞉all-your-base꞉> 
; Syntax error reading source at (REPL:18:0).
; No dispatch macro for: b
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling let* at (all_your_base.clj:15:9).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Execution error (StackOverflowError) at java.lang.ClassLoader/loadClass (ClassLoader.java:569).
; null
clj꞉all-your-base꞉> 
; Syntax error (StackOverflowError) compiling let* at (all_your_base.clj:15:9).
; null
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:15:9).
; Wrong number of args (3) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling let* at (all_your_base.clj:15:9).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:15:9).
; Wrong number of args (3) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:15:9).
; Wrong number of args (3) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:15:9).
; Wrong number of args (3) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (ArityException) compiling at (all_your_base.clj:15:9).
; Wrong number of args (3) passed to: clojure.core/for
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling . at (all_your_base.clj:1:1).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling . at (all_your_base.clj:1:1).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling . at (all_your_base.clj:1:1).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling . at (all_your_base.clj:1:1).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling . at (all_your_base.clj:1:1).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling . at (all_your_base.clj:1:1).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling . at (all_your_base.clj:1:1).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
(1 1 0 0)
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling new at (all_your_base.clj:1:34).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling new at (all_your_base.clj:1:34).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
(1 0 0)
clj꞉all-your-base꞉> 
; Syntax error (StackOverflowError) compiling new at (all_your_base.clj:15:9).
; null
clj꞉all-your-base꞉> 
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling at (all_your_base.clj:1:6).
; null
; Evaluation of file all_your_base.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: all_your_base.clj
; Evaluating file: all_your_base.clj
; Evaluating file: all_your_base.clj
; Syntax error (StackOverflowError) compiling fn* at (all_your_base.clj:20:1).
; null
clj꞉all-your-base꞉> 
; nREPL Connection was closed
